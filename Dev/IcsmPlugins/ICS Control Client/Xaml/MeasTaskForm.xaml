<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:XICSM.ICSControlClient.WpfControls"
             xmlns:res="clr-namespace:XICSM.ICSControlClient.Properties;assembly=XICSM_ICSControlClient"
             xmlns:cs="clr-namespace:XICSM.ICSControlClient.WpfControls.Charts;assembly=XICSM_ICSControlClient"
             xmlns:maps="clr-namespace:XICSM.ICSControlClient.WpfControls.Maps;assembly=XICSM_ICSControlClient"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:StyleAlias="clr-namespace:XICSM.ICSControlClient.Models.Views"
             xmlns:cdg="clr-namespace:XICSM.ICSControlClient.WpfControls;assembly=XICSM_ICSControlClient"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style x:Key="DataGridHeaderCentered" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="DataGridCellCentered" TargetType="DataGridCell">
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
        </Style>
        <Style x:Key="DataGridCellRighted" TargetType="DataGridCell">
            <Setter Property="TextBlock.TextAlignment" Value="Right" />
        </Style>
        <Style TargetType="TextBox">
          <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
              <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={RelativeSource Self},
                          Path=(Validation.Errors)[0].ErrorContent}" />
              <Setter Property="Foreground" Value="Red" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="False">
              <Setter Property="ToolTip"
                  Value="" />
              <Setter Property="Foreground" Value="Black" />
            </Trigger>
          </Style.Triggers>
        </Style>
        <Style TargetType="DatePicker">
          <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
              <Setter Property="ToolTip"
                  Value="{Binding RelativeSource={RelativeSource Self},
                            Path=(Validation.Errors)[0].ErrorContent}" />
              <Setter Property="Foreground" Value="Red" />
            </Trigger>
            <Trigger Property="Validation.HasError" Value="False">
              <Setter Property="ToolTip"
                  Value="" />
              <Setter Property="Foreground" Value="Black" />
            </Trigger>
          </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <DockPanel LastChildFill="True" MinHeight="30">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <GroupBox  Header="{x:Static res:Resources.Parameters}"  Margin="0, 5, 5, 5" Grid.Column="0" Grid.RowSpan="3" >
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <ScrollViewer Grid.Column="0" Grid.Row="0" Margin="10, 10, 10, 25">
                  <Grid DataContext="{Binding CurrentMeasTask}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="120" />
                      <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"></RowDefinition>
                      <RowDefinition Height="Auto"></RowDefinition>
                      <RowDefinition Height="Auto"></RowDefinition>
                      <RowDefinition Height="Auto"></RowDefinition>
                      <RowDefinition Height="Auto"></RowDefinition>
                      <RowDefinition Height="Auto"></RowDefinition>
                      <RowDefinition Height="Auto"></RowDefinition>
                      <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Label Height="18" Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Padding="5,0,0,0" Content = "{x:Static res:Resources.Name}"  />
                    <TextBox Height="18" Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" Text="{Binding Path=Name}"/>

                    <Label Height="18" Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" Padding="5,0,0,0" Content = "{x:Static res:Resources.TypeMeasurements}"  />
                    <ComboBox Grid.Column="1" Grid.Row="1" SelectedValue="{Binding MeasDtParamTypeMeasurements, Mode=TwoWay}" ItemsSource="{Binding MeasDtParamTypeMeasurementsValues}" IsEnabled="False"/>

                    <Expander Grid.ColumnSpan="4" Grid.Row="2" Header="{x:Static res:Resources.TimeMeas}" IsExpanded="true">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="100" />
                          <ColumnDefinition Width="*" />
                          <ColumnDefinition Width="100" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <!--<RowDefinition Height="Auto"></RowDefinition>-->
                          <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Height="18" Grid.Column="0" Grid.Row="0" Padding="5,0,0,0" Content = "{x:Static res:Resources.DateStart}"  />
                        <DatePicker x:Name="MeasTimeParamListPerStart" Grid.Column="1" Grid.Row="0" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top">
                          <DatePicker.SelectedDate>
                            <Binding Path="MeasTimeParamListPerStart" StringFormat='{}{0:dd.MM.yyyy}'>
                              <Binding.ValidationRules>
                                <DataErrorValidationRule/>
                              </Binding.ValidationRules>
                            </Binding>
                          </DatePicker.SelectedDate>
                        </DatePicker>                          

                        <Label Height="18" Grid.Column="2" Grid.Row="0" Padding="5,0,0,0" Content = "{x:Static res:Resources.DateStop}"  />
                        <DatePicker x:Name="MeasTimeParamListPerStop" Grid.Column="3" Grid.Row="0" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top">
                          <DatePicker.SelectedDate>
                            <Binding Path="MeasTimeParamListPerStop" StringFormat='{}{0:dd.MM.yyyy}'>
                              <Binding.ValidationRules>
                                <DataErrorValidationRule/>
                              </Binding.ValidationRules>
                            </Binding>
                          </DatePicker.SelectedDate>
                        </DatePicker>

                        <Label Height="18" Grid.Column="0" Grid.Row="1" Padding="5,0,0,0" Content = "{x:Static res:Resources.TimeStart}"  />
                        <TextBox x:Name="MeasTimeParamListTimeStart" Grid.Column="1" Grid.Row="1" Text="{Binding Path=MeasTimeParamListTimeStart, Mode=TwoWay, StringFormat='{}{0:HH:mm}'}" Width="100" HorizontalAlignment="Left"/>

                        <Label Height="18" Grid.Column="2" Grid.Row="1" Padding="5,0,0,0" Content = "{x:Static res:Resources.TimeStop}"  />
                        <TextBox x:Name="MeasTimeParamListTimeStop" Grid.Column="3" Grid.Row="1" Text="{Binding Path=MeasTimeParamListTimeStop, Mode=TwoWay, StringFormat='{}{0:HH:mm}'}" Width="100" HorizontalAlignment="Left"/>

                        <!--<Label Height="18" Grid.Column="0" Grid.Row="2" Padding="5,0,0,0" Content = "{x:Static res:Resources.DurationS}"  />
                        <TextBox Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" Text="{Binding Path=MeasTimeParamListPerInterval}">
                          <TextBox.Style>
                            <Style TargetType="TextBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Signaling">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="SpectrumOccupation">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Level">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </TextBox.Style>
                        </TextBox>-->
                      </Grid>
                    </Expander>
                    <Expander Grid.ColumnSpan="4" Grid.Row="3" Header="{x:Static res:Resources.Frequency}" IsExpanded="false">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="130" />
                          <ColumnDefinition Width="*" />
                          <ColumnDefinition Width="100" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Height="18" Grid.Column="0" Grid.Row="0" Padding="5,0,0,0" Content = "{x:Static res:Resources.Mode}"  />
                        <ComboBox Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="3" SelectedValue="{Binding MeasFreqParamMode, Mode=TwoWay}" ItemsSource="{Binding MeasFreqParamModeValues}">
                          <ComboBox.Style>
                            <Style TargetType="ComboBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Signaling">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="SpectrumOccupation">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Level">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </ComboBox.Style>                          
                        </ComboBox>

                        <Label Height="18" Grid.Column="0" Grid.Row="1" Padding="5,0,0,0" Content = "{x:Static res:Resources.StartFreqMHz}">
                          <Label.Style>
                            <Style TargetType="Label">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="SingleFrequency">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyList">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyRange">
                                  <Setter  Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </Label.Style>
                        </Label>
                        <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding Path=MeasFreqParamRgL}">
                          <TextBox.Style>
                            <Style TargetType="TextBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="SingleFrequency">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyList">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyRange">
                                  <Setter  Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </TextBox.Style>
                        </TextBox>

                        <Label Height="18" Grid.Column="2" Grid.Row="1" Padding="5,0,0,0" Content = "{x:Static res:Resources.StopFreqMHz}">
                          <Label.Style>
                            <Style TargetType="Label">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="SingleFrequency">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyList">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyRange">
                                  <Setter  Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </Label.Style>
                        </Label>
                        <TextBox Grid.Column="3" Grid.Row="1" Text="{Binding Path=MeasFreqParamRgU}">
                          <TextBox.Style>
                            <Style TargetType="TextBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="SingleFrequency">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyList">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyRange">
                                  <Setter  Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </TextBox.Style>
                        </TextBox>
                        
                        <Label Height="18" Grid.Column="0" Grid.Row="2" Padding="5,0,0,0" Content = "{x:Static res:Resources.StepkHz}">
                          <!--<Label.Style>
                            <Style TargetType="Label">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="SingleFrequency">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyList">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyRange">
                                  <Setter  Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </Label.Style>-->
                        </Label>
                        <TextBox Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" Text="{Binding Path=MeasFreqParamStep}">
                          <TextBox.Style>
                            <Style TargetType="TextBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Signaling">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="SpectrumOccupation">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Level">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </TextBox.Style>
                        </TextBox>

                        <Label Height="18" Grid.Column="0" Grid.Row="1" Padding="5,0,0,0" Content = "{x:Static res:Resources.FreqMHz}">
                          <Label.Style>
                            <Style TargetType="Label">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="SingleFrequency">
                                  <Setter  Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyList">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyRange">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </Label.Style>
                        </Label>                          
                        <TextBox Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="3" Text="{Binding MeasFreqParam}">
                          <TextBox.Style>
                            <Style TargetType="TextBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="SingleFrequency">
                                  <Setter  Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyList">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyRange">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </TextBox.Style>
                        </TextBox>
                        <Label Height="18" Grid.Column="0" Grid.Row="1" Padding="5,0,0,0" Content = "{x:Static res:Resources.FreqListMHz}">
                          <Label.Style>
                            <Style TargetType="Label">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="SingleFrequency">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyList">
                                  <Setter  Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyRange">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </Label.Style>
                        </Label>                          
                        <TextBox Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="3" Text="{Binding MeasFreqParams}">
                          <TextBox.Style>
                            <Style TargetType="TextBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="SingleFrequency">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyList">
                                  <Setter  Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasFreqParamMode}" Value="FrequencyRange">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Signaling">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="SpectrumOccupation">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Level">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </TextBox.Style>                          
                        </TextBox>                          
                      </Grid>
                    </Expander>
                    <Expander Grid.ColumnSpan="4" Grid.Row="4" Header="{x:Static res:Resources.DetectorParameters}" IsExpanded="false">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="170" />
                          <ColumnDefinition Width="30" />
                          <ColumnDefinition Width="25" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        
                        <Label Height="18" Grid.Column="1" Grid.Row="0" Padding="5,0,0,0" Content = "{x:Static res:Resources.Auto}"/>
                        <CheckBox Grid.Column="2" Grid.Row="0" IsChecked="{Binding Path=IsAutoMeasDtParamRBW, Mode=TwoWay}">
                          <CheckBox.Style>
                            <Style TargetType="CheckBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Signaling">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="SpectrumOccupation">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Level">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </CheckBox.Style>
                        </CheckBox>
                        <Label Height="18" Grid.Column="0" Grid.Row="0" Padding="5,0,0,0" Content = "{x:Static res:Resources.RBWkHz}"  />
                        <TextBox Grid.Column="3" Grid.Row="0" Text="{Binding Path=MeasDtParamRBW}">
                          <TextBox.Style>
                            <Style TargetType="TextBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsAutoMeasDtParamRBW}" Value="True">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsAutoMeasDtParamRBW}" Value="False">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </TextBox.Style>
                        </TextBox>

                        <Label Height="18" Grid.Column="1" Grid.Row="1" Padding="5,0,0,0" Content = "{x:Static res:Resources.Auto}"  />
                        <CheckBox Grid.Column="2" Grid.Row="1" IsChecked="{Binding Path=IsAutoMeasDtParamVBW}">
                          <CheckBox.Style>
                            <Style TargetType="CheckBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Signaling">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="SpectrumOccupation">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Level">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </CheckBox.Style>
                        </CheckBox>
                        <Label Height="18" Grid.Column="0" Grid.Row="1" Padding="5,0,0,0" Content = "{x:Static res:Resources.VBWkHz}"/>
                        <TextBox Grid.Column="3" Grid.Row="1" Text="{Binding Path=MeasDtParamVBW}">
                          <TextBox.Style>
                            <Style TargetType="TextBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsAutoMeasDtParamVBW}" Value="True">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsAutoMeasDtParamVBW}" Value="False">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </TextBox.Style>
                        </TextBox>

                        <Label Height="18" Grid.Column="1" Grid.Row="2" Padding="5,0,0,0" Content = "{x:Static res:Resources.Auto}"  />
                        <CheckBox Grid.Column="2" Grid.Row="2" IsChecked="{Binding Path=IsAutoMeasDtParamMeasTime}"/>
                        <Label Height="18" Grid.Column="0" Grid.Row="2" Padding="5,0,0,0" Content = "{x:Static res:Resources.SweepTimeS}"/>
                        <TextBox x:Name="MeasDtParamMeasTime" Grid.Column="3" Grid.Row="2">
                          <TextBox.Style>
                            <Style TargetType="TextBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsAutoMeasDtParamMeasTime}" Value="True">
                                  <!--<Setter Property="Text" Value=""/>-->
                                  <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsAutoMeasDtParamMeasTime}" Value="False">
                                  <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                  <Setter Property="ToolTip"
                                      Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                  <Setter Property="Foreground" Value="Red" />
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="False">
                                  <Setter Property="ToolTip"
                                      Value="" />
                                  <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                              </Style.Triggers>
                            </Style>
                          </TextBox.Style>
                          <TextBox.Text>
                            <Binding Path="MeasDtParamMeasTime">
                              <Binding.ValidationRules>
                                <DataErrorValidationRule/>
                              </Binding.ValidationRules>
                            </Binding>
                          </TextBox.Text>
                        </TextBox>

                        <Label Height="18" Grid.Column="0" Grid.Row="3" Padding="5,0,0,0" Content = "{x:Static res:Resources.TypeOfDetecting}"/>
                        <ComboBox Grid.Column="3" Grid.Row="3" SelectedValue="{Binding MeasDtParamDetectType, Mode=TwoWay}" ItemsSource="{Binding MeasDtParamDetectTypeValues}">
                          <ComboBox.Style>
                            <Style TargetType="ComboBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Signaling">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="SpectrumOccupation">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Level">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </ComboBox.Style>
                        </ComboBox>

                        <Label Height="18" Grid.Column="1" Grid.Row="4" Padding="5,0,0,0" Content = "{x:Static res:Resources.Auto}"  />
                        <CheckBox Grid.Column="2" Grid.Row="4" IsChecked="{Binding Path=IsAutoMeasDtParamRfAttenuation}"/>
                        <Label Height="18" Grid.Column="0" Grid.Row="4" Padding="5,0,0,0" Content = "{x:Static res:Resources.AttenuationDB}"/>
                        <TextBox x:Name="MeasDtParamRfAttenuation" Grid.Column="3" Grid.Row="4">
                          <TextBox.Style>
                            <Style TargetType="TextBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsAutoMeasDtParamRfAttenuation}" Value="True">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsAutoMeasDtParamRfAttenuation}" Value="False">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                  <Setter Property="ToolTip"
                                      Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                  <Setter Property="Foreground" Value="Red" />
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="False">
                                  <Setter Property="ToolTip"
                                      Value="" />
                                  <Setter Property="Foreground" Value="Black" />
                                </Trigger>                                
                              </Style.Triggers>
                            </Style>
                          </TextBox.Style>
                          <TextBox.Text>
                            <Binding Path="MeasDtParamRfAttenuation">
                              <Binding.ValidationRules>
                                <DataErrorValidationRule/>
                              </Binding.ValidationRules>
                            </Binding>
                          </TextBox.Text>                          
                        </TextBox>

                        <Label Height="18" Grid.Column="1" Grid.Row="5" Padding="5,0,0,0" Content = "{x:Static res:Resources.Auto}"  />
                        <CheckBox Grid.Column="2" Grid.Row="5" IsChecked="{Binding Path=IsAutoMeasDtParamPreamplification}"/>
                        <Label Height="18" Grid.Column="0" Grid.Row="5" Padding="5,0,0,0" Content = "{x:Static res:Resources.GainOfPreamplifierDB}"/>
                        <TextBox x:Name="MeasDtParamPreamplification" Grid.Column="3" Grid.Row="5">
                          <TextBox.Style>
                            <Style TargetType="TextBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsAutoMeasDtParamPreamplification}" Value="True">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsAutoMeasDtParamPreamplification}" Value="False">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                  <Setter Property="ToolTip"
                                      Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                  <Setter Property="Foreground" Value="Red" />
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="False">
                                  <Setter Property="ToolTip"
                                      Value="" />
                                  <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                              </Style.Triggers>
                            </Style>
                          </TextBox.Style>
                          <TextBox.Text>
                            <Binding Path="MeasDtParamPreamplification">
                              <Binding.ValidationRules>
                                <DataErrorValidationRule/>
                              </Binding.ValidationRules>
                            </Binding>
                          </TextBox.Text>
                        </TextBox>

                        <Label Height="18" Grid.Column="1" Grid.Row="6" Padding="5,0,0,0" Content = "{x:Static res:Resources.Auto}"  />
                        <CheckBox Grid.Column="2" Grid.Row="6" IsChecked="{Binding Path=IsAutoMeasDtParamReferenceLevel}"/>
                        <Label Height="18" Grid.Column="0" Grid.Row="6" Padding="5,0,0,0" Content = "{x:Static res:Resources.ReferenceLevelDBm}"/>
                        <TextBox x:Name="MeasDtParamReferenceLevel" Grid.Column="3" Grid.Row="6">
                          <TextBox.Style>
                            <Style TargetType="TextBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsAutoMeasDtParamReferenceLevel}" Value="True">
                                  <Setter  Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsAutoMeasDtParamReferenceLevel}" Value="False">
                                  <Setter  Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <Trigger Property="Validation.HasError" Value="True">
                                  <Setter Property="ToolTip"
                                      Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                  <Setter Property="Foreground" Value="Red" />
                                </Trigger>
                                <Trigger Property="Validation.HasError" Value="False">
                                  <Setter Property="ToolTip"
                                      Value="" />
                                  <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                              </Style.Triggers>
                            </Style>
                          </TextBox.Style>
                          <TextBox.Text>
                            <Binding Path="MeasDtParamReferenceLevel">
                              <Binding.ValidationRules>
                                <DataErrorValidationRule/>
                              </Binding.ValidationRules>
                            </Binding>
                          </TextBox.Text>
                        </TextBox>
                        
                        <Label Height="18" Grid.Column="0" Grid.Row="7" Padding="5,0,0,0" Content = "{x:Static res:Resources.SweepNumber}"/>
                        <TextBox x:Name="MeasOtherSwNumber" Grid.Column="3" Grid.Row="7" >
                          <TextBox.Text>
                            <Binding Path="MeasOtherSwNumber">
                              <Binding.ValidationRules>
                                <DataErrorValidationRule/>
                              </Binding.ValidationRules>
                            </Binding>
                          </TextBox.Text>
                        </TextBox>
                    </Grid>
                    </Expander>
                    <Expander Grid.ColumnSpan="4" Grid.Row="5" Header="{x:Static res:Resources.SpectrumOccupationParameters}" IsExpanded="true">
                      <Expander.Style>
                        <Style TargetType="Expander">
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Signaling">
                              <Setter  Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="SpectrumOccupation">
                              <Setter  Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Level">
                              <Setter  Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </Expander.Style>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="320" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Label Height="18" Grid.Column="0" Grid.Row="0" Padding="5,0,0,0" Content = "{x:Static res:Resources.TypeSpectrumOccupation}"  />
                        <ComboBox Grid.Column="1" Grid.Row="0" SelectedValue="{Binding MeasOtherTypeSpectrumOccupation, Mode=TwoWay}" ItemsSource="{Binding MeasOtherTypeSpectrumOccupationValues}"/>

                        <Label Height="18" Grid.Column="0" Grid.Row="1" Padding="5,0,0,0" Content = "{x:Static res:Resources.LevelOfMinOccupationDBm}"  />
                        <TextBox x:Name="MeasOtherLevelMinOccup" Grid.Column="1" Grid.Row="1">
                          <TextBox.Text>
                            <Binding Path="MeasOtherLevelMinOccup">
                              <Binding.ValidationRules>
                                <DataErrorValidationRule/>
                              </Binding.ValidationRules>
                            </Binding>
                          </TextBox.Text>
                        </TextBox>

                        <Label Height="18" Grid.Column="0" Grid.Row="2" Padding="5,0,0,0" Content = "{x:Static res:Resources.CollectDataForChangeInTheMinLevel}"/>
                        <CheckBox Grid.Column="1" Grid.Row="2" IsChecked="{Binding Path=SupportMultyLevel}"/>

                        <Label Height="18" Grid.Column="0" Grid.Row="3" Padding="5,0,0,0" Content = "{x:Static res:Resources.NumberTotalScan}"  />
                        <TextBox x:Name="MeasOtherNCount" Grid.Column="1" Grid.Row="3">
                          <TextBox.Text>
                            <Binding Path="MeasOtherNCount">
                              <Binding.ValidationRules>
                                <DataErrorValidationRule/>
                              </Binding.ValidationRules>
                            </Binding>
                          </TextBox.Text>
                        </TextBox>

                        <Label Height="18" Grid.Column="0" Grid.Row="4" Padding="5,0,0,0" Content = "{x:Static res:Resources.NumberOfStepsForMeasurementsInChannel}"  />
                        <TextBox x:Name="MeasOtherNChenal" Grid.Column="1" Grid.Row="4">
                          <TextBox.Text>
                            <Binding Path="MeasOtherNChenal">
                              <Binding.ValidationRules>
                                <DataErrorValidationRule/>
                              </Binding.ValidationRules>
                            </Binding>
                          </TextBox.Text>
                        </TextBox>
                      </Grid>
                    </Expander>
                    <Expander Grid.ColumnSpan="4" Grid.Row="6" Header="{x:Static res:Resources.MonitoringEmissionParameters}" IsExpanded="true">
                      <Expander.Style>
                        <Style TargetType="Expander">
                          <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Signaling">
                              <Setter  Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="SpectrumOccupation">
                              <Setter  Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=MeasDtParamTypeMeasurements}" Value="Level">
                              <Setter  Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                          </Style.Triggers>
                        </Style>
                      </Expander.Style>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto"></RowDefinition>
                          <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <GroupBox  Header=""  Margin="0, 5, 5, 5">
                          <Grid>
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="350" />
                              <ColumnDefinition Width="30" />
                              <ColumnDefinition Width="25" />
                              <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            
                            <Label Height="18" Grid.Column="0" Grid.Row="0" Padding="5,0,0,0" Content = "{x:Static res:Resources.UsingSmoothingTraceForAnalysis}"/>
                            <CheckBox Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="3" IsChecked="{Binding Path=FiltrationTrace}"/>

                            <Label Height="18" Grid.Column="0" Grid.Row="1" Padding="5,0,0,0" Content = "{x:Static res:Resources.SpectrumCoefficientFromEmission}"  />
                            <TextBox x:Name="windowBW" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="3" >
                              <TextBox.Text>
                                <Binding Path="windowBW">
                                  <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                  </Binding.ValidationRules>
                                </Binding>
                              </TextBox.Text>
                              <TextBox.Style>
                                <Style TargetType="TextBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="true">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="false">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </TextBox.Style>
                            </TextBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="2" Padding="5,0,0,0" Content = "{x:Static res:Resources.MarginForReferenceLevelCalculationDB}"  />
                            <TextBox x:Name="AllowableExcess_dB" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="3" >
                              <TextBox.Text>
                                <Binding Path="AllowableExcess_dB">
                                  <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                  </Binding.ValidationRules>
                                </Binding>
                              </TextBox.Text>
                            </TextBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="3" Padding="5,0,0,0" Content = "{x:Static res:Resources.NoiseLevel}"  />
                            <Label Height="18" Grid.Column="1" Grid.Row="3" Padding="5,0,0,0" Content = "{x:Static res:Resources.Auto}"  />
                            <CheckBox Grid.Column="2" Grid.Row="3" IsChecked="{Binding Path=IsAutoTriggerLevel_dBm_Hz}"/>
                            <TextBox x:Name="triggerLevel_dBm_Hz" Grid.Column="3" Grid.Row="3" >
                              <TextBox.Style>
                                <Style TargetType="TextBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsAutoTriggerLevel_dBm_Hz}" Value="True">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsAutoTriggerLevel_dBm_Hz}" Value="False">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <Trigger Property="Validation.HasError" Value="True">
                                      <Setter Property="ToolTip"
                                          Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                      <Setter Property="Foreground" Value="Red" />
                                    </Trigger>
                                    <Trigger Property="Validation.HasError" Value="False">
                                      <Setter Property="ToolTip"
                                          Value="" />
                                      <Setter Property="Foreground" Value="Black" />
                                    </Trigger>
                                  </Style.Triggers>
                                </Style>
                              </TextBox.Style>
                              <TextBox.Text>
                                <Binding Path="triggerLevel_dBm_Hz">
                                  <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                  </Binding.ValidationRules>
                                </Binding>
                              </TextBox.Text>
                            </TextBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="4" Padding="5,0,0,0" Content = "{x:Static res:Resources.PercOfIntersectionOfSpectrumsToCombineEmissions}"  />
                            <TextBox x:Name="CrossingBWPercentageForGoodSignals" Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="3" >
                              <TextBox.Text>
                                <Binding Path="CrossingBWPercentageForGoodSignals">
                                  <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                  </Binding.ValidationRules>
                                </Binding>
                              </TextBox.Text>
                              <TextBox.Style>
                                <Style TargetType="TextBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="true">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="false">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </TextBox.Style>
                            </TextBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="5" Padding="5,0,0,0" Content = "{x:Static res:Resources.PercOfIntersectionOfSpectrumsToCombineEmissionsLowLevelSignals}"  />
                            <TextBox x:Name="CrossingBWPercentageForBadSignals" Grid.Column="1" Grid.Row="5" Grid.ColumnSpan="3" >
                              <TextBox.Text>
                                <Binding Path="CrossingBWPercentageForBadSignals">
                                  <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                  </Binding.ValidationRules>
                                </Binding>
                              </TextBox.Text>
                              <TextBox.Style>
                                <Style TargetType="TextBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="true">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="false">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </TextBox.Style>
                            </TextBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="6" Padding="5,0,0,0" Content = "{x:Static res:Resources.LevelForBandwithEstimation}"  />
                            <TextBox x:Name="DiffLevelForCalcBW" Grid.Column="1" Grid.Row="6" Grid.ColumnSpan="3" >
                              <TextBox.Text>
                                <Binding Path="DiffLevelForCalcBW">
                                  <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                  </Binding.ValidationRules>
                                </Binding>
                              </TextBox.Text>
                            </TextBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="7" Padding="5,0,0,0" Content = "{x:Static res:Resources.UsingCorrelationAnalysis}"/>
                            <CheckBox Grid.Column="1" Grid.Row="7" Grid.ColumnSpan="3" IsChecked="{Binding Path=CorrelationAnalize}">
                              <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="true">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="false">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </CheckBox.Style>
                            </CheckBox>
                              

                            <Label Height="18" Grid.Column="0" Grid.Row="8" Padding="5,0,0,0" Content = "{x:Static res:Resources.CorrelationCoefficient}"  />
                            <TextBox x:Name="CorrelationFactor" Grid.Column="1" Grid.Row="8" Grid.ColumnSpan="3" >
                              <TextBox.Style>
                                <Style TargetType="TextBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CorrelationAnalize}" Value="True">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="true">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="false">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CorrelationAnalize}" Value="False">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <Trigger Property="Validation.HasError" Value="True">
                                      <Setter Property="ToolTip"
                                          Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                      <Setter Property="Foreground" Value="Red" />
                                    </Trigger>
                                    <Trigger Property="Validation.HasError" Value="False">
                                      <Setter Property="ToolTip"
                                          Value="" />
                                      <Setter Property="Foreground" Value="Black" />
                                    </Trigger>
                                  </Style.Triggers>
                                </Style>
                              </TextBox.Style>
                              <TextBox.Text>
                                <Binding Path="CorrelationFactor">
                                  <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                  </Binding.ValidationRules>
                                </Binding>
                              </TextBox.Text>
                            </TextBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="9" Padding="5,0,0,0" Content = "{x:Static res:Resources.TheMaximumNumberOfScanPerDay}"  />
                            <TextBox x:Name="SignalizationNCount" Grid.Column="1" Grid.Row="9" Grid.ColumnSpan="3" >
                              <TextBox.Text>
                                <Binding Path="SignalizationNCount">
                                  <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                  </Binding.ValidationRules>
                                </Binding>
                              </TextBox.Text>
                            </TextBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="10" Padding="5,0,0,0" Content = "{x:Static res:Resources.TheNumberOfPointsInTheChannelDuringScanning}"  />
                            <TextBox x:Name="SignalizationNChenal" Grid.Column="1" Grid.Row="10" Grid.ColumnSpan="3" >
                              <TextBox.Text>
                                <Binding Path="SignalizationNChenal">
                                  <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                  </Binding.ValidationRules>
                                </Binding>
                              </TextBox.Text>
                            </TextBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="11" Padding="5,0,0,0" Content = "{x:Static res:Resources.CheckingEmissionInChannels}"/>
                            <CheckBox Grid.Column="1" Grid.Row="11" Grid.ColumnSpan="3" IsChecked="{Binding Path=AnalyzeByChannel}">
                              <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="true">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="false">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </CheckBox.Style>
                            </CheckBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="12" Padding="5,0,0,0" Content = "{x:Static res:Resources.CollectEmissionForInstrumentalEstimation}"/>
                            <CheckBox Grid.Column="1" Grid.Row="12" Grid.ColumnSpan="3" IsChecked="{Binding Path=CollectEmissionInstrumentalEstimation}"/>
                          </Grid>
                        </GroupBox>
                        <GroupBox  Header=""  Margin="0, 5, 5, 5" Grid.Row="1">
                          <GroupBox.Style>
                            <Style TargetType="GroupBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=AnalyzeByChannel}" Value="True">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=AnalyzeByChannel}" Value="False">
                                  <Setter  Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </GroupBox.Style>
                          <Grid>
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="350" />
                              <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Label Height="18" Grid.Column="0" Grid.Row="0" Padding="5,0,0,0" Content = "{x:Static res:Resources.AnalysisOnlyWithContraventionOfReferenceLevel}"/>
                            <CheckBox Grid.Column="1" Grid.Row="0" IsChecked="{Binding Path=CompareTraceJustWithRefLevels}">
                              <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="true">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="false">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </CheckBox.Style>
                            </CheckBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="1" Padding="5,0,0,0" Content = "{x:Static res:Resources.AutomaticDivisionOfEmissions}"  />
                            <CheckBox Grid.Column="1" Grid.Row="1" IsChecked="{Binding Path=AutoDivisionEmitting}"/>

                            <Label Height="18" Grid.Column="0" Grid.Row="2" Padding="5,0,0,0" Content = "{x:Static res:Resources.LevelsDifferenceForEmissionDivisionDB}"  />
                            <TextBox x:Name="DifferenceMaxMax" Grid.Column="1" Grid.Row="2" >
                              <TextBox.Style>
                                <Style TargetType="TextBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=AutoDivisionEmitting}" Value="True">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=AutoDivisionEmitting}" Value="False">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <Trigger Property="Validation.HasError" Value="True">
                                      <Setter Property="ToolTip"
                                          Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                      <Setter Property="Foreground" Value="Red" />
                                    </Trigger>
                                    <Trigger Property="Validation.HasError" Value="False">
                                      <Setter Property="ToolTip"
                                          Value="" />
                                      <Setter Property="Foreground" Value="Black" />
                                    </Trigger>
                                  </Style.Triggers>
                                </Style>
                              </TextBox.Style>
                              <TextBox.Text>
                                <Binding Path="DifferenceMaxMax">
                                  <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                  </Binding.ValidationRules>
                                </Binding>
                              </TextBox.Text>
                            </TextBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="3" Padding="5,0,0,0" Content = "{x:Static res:Resources.TheMinimumNumberOfPointsForFindingEmissions}"  />
                            <TextBox x:Name="NumberPointForChangeExcess" Grid.Column="1" Grid.Row="3" >
                              <TextBox.Text>
                                <Binding Path="NumberPointForChangeExcess">
                                  <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                  </Binding.ValidationRules>
                                </Binding>
                              </TextBox.Text>
                            </TextBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="4" Padding="5,0,0,0" Content = "{x:Static res:Resources.DetailedMeasurementsOfTheEmissionBandwith}"  />
                            <CheckBox Grid.Column="1" Grid.Row="4" IsChecked="{Binding Path=DetailedMeasurementsBWEmission}">
                              <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="true">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="false">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </CheckBox.Style>
                            </CheckBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="5" Padding="5,0,0,0" Content = "{x:Static res:Resources.TheMinimumNumberOfPointsASpectrumMustContainInOrderNotToMeasureBandwith}"  />
                            <TextBox x:Name="MinPointForDetailBW" Grid.Column="1" Grid.Row="5" Text="{Binding Path=MinPointForDetailBW}" >
                              <TextBox.Style>
                                <Style TargetType="TextBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=DetailedMeasurementsBWEmission}" Value="True">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=DetailedMeasurementsBWEmission}" Value="False">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </TextBox.Style>
                            </TextBox>

                            <Label Height="18" Grid.Column="0" Grid.Row="6" Padding="5,0,0,0" Content = "{x:Static res:Resources.AnalyzeSysInfoEmission}"  />
                            <CheckBox Grid.Column="1" Grid.Row="6" IsChecked="{Binding Path=AnalyzeSysInfoEmission}"/>

                            <Label Height="18" Grid.Column="0" Grid.Row="7" Padding="5,0,0,0" Content = "{x:Static res:Resources.Standard}">
                              <Label.Style>
                                <Style TargetType="Label">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="true">
                                      <Setter  Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="false">
                                      <Setter  Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </Label.Style>
                            </Label>
                            <ComboBox Grid.Column="3" Grid.Row="7" SelectedValue="{Binding StandardInstEstim, Mode=TwoWay}" ItemsSource="{Binding StandardInstEstimValues}">
                              <ComboBox.Style>
                                <Style TargetType="ComboBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="true">
                                      <Setter  Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CollectEmissionInstrumentalEstimation}" Value="false">
                                      <Setter  Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </ComboBox.Style>
                            </ComboBox>

                          </Grid>
                        </GroupBox>
                        <GroupBox  Header=""  Margin="0, 5, 5, 5" Grid.Row="1">
                          <GroupBox.Style>
                            <Style TargetType="GroupBox">
                              <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=AnalyzeByChannel}" Value="True">
                                  <Setter  Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=AnalyzeByChannel}" Value="False">
                                  <Setter  Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                              </Style.Triggers>
                            </Style>
                          </GroupBox.Style>
                          <Grid>
                            <Grid.ColumnDefinitions>
                              <ColumnDefinition Width="200" />
                              <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="Auto"></RowDefinition>
                              <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Label Height="18" Grid.Column="0" Grid.Row="0" Padding="5,0,0,0" Content = "{x:Static res:Resources.CheckingTheFrequencyChannel}"  />
                            <CheckBox Grid.Column="1" Grid.Row="0" IsChecked="{Binding Path=CheckFreqChannel}"/>

                            <Label Height="18" Grid.Column="0" Grid.Row="1" Padding="5,0,0,0" Content = "{x:Static res:Resources.MaximumFrequencyDeviation}"  />
                            <TextBox x:Name="MaxFreqDeviation" Grid.Column="1" Grid.Row="1" >
                              <TextBox.Style>
                                <Style TargetType="TextBox">
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CheckFreqChannel}" Value="True">
                                      <Setter  Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CheckFreqChannel}" Value="False">
                                      <Setter  Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <Trigger Property="Validation.HasError" Value="True">
                                      <Setter Property="ToolTip"
                                          Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                      <Setter Property="Foreground" Value="Red" />
                                    </Trigger>
                                    <Trigger Property="Validation.HasError" Value="False">
                                      <Setter Property="ToolTip"
                                          Value="" />
                                      <Setter Property="Foreground" Value="Black" />
                                    </Trigger>                                    
                                  </Style.Triggers>
                                </Style>
                              </TextBox.Style>
                              <TextBox.Text>
                                <Binding Path="MaxFreqDeviation">
                                  <Binding.ValidationRules>
                                    <DataErrorValidationRule/>
                                  </Binding.ValidationRules>
                                </Binding>
                              </TextBox.Text>                              
                            </TextBox>                            

                            <Label Height="18" Grid.Column="0" Grid.Row="2" Padding="5,0,0,0" Content = "{x:Static res:Resources.CheckingLevelInTheChannel}"  />
                            <CheckBox Grid.Column="1" Grid.Row="2" IsChecked="{Binding Path=CheckLevelChannel}"/>

                            <Label Height="18" Grid.Column="0" Grid.Row="3" Padding="5,0,0,0" Content = "{x:Static res:Resources.Standard}"  />
                            <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Path=Standard}" Height="15" IsEnabled="False"/>
                          </Grid>
                        </GroupBox>
                      </Grid>
                    </Expander>                    
                  </Grid>
                </ScrollViewer>
                <Button Grid.Row="1" Content="{x:Static res:Resources.StartCommand}" Command="{Binding CreateMeasTaskCommand}" Width="50" Height="20" VerticalAlignment="Bottom">
                    <Button.Style>
                      <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Style.Triggers>
                          <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MeasTimeParamListPerStart}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MeasTimeParamListPerStop}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MeasTimeParamListTimeStart}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MeasTimeParamListTimeStop}" Value="False"/>
                              <!--<Condition Binding="{Binding Path=(Validation.HasError), ElementName=MeasDtParamMeasTime}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MeasDtParamRfAttenuation}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MeasDtParamPreamplification}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MeasDtParamReferenceLevel}" Value="False"/>-->
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MeasOtherSwNumber}" Value="False"/>

                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MeasOtherLevelMinOccup}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MeasOtherNCount}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MeasOtherNChenal}" Value="False"/>

                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=windowBW}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=AllowableExcess_dB}" Value="False"/>
                              <!--<Condition Binding="{Binding Path=(Validation.HasError), ElementName=triggerLevel_dBm_Hz}" Value="False"/>-->
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=CrossingBWPercentageForGoodSignals}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=CrossingBWPercentageForBadSignals}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=DiffLevelForCalcBW}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=CorrelationFactor}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SignalizationNCount}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SignalizationNChenal}" Value="False"/>

                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=DifferenceMaxMax}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=NumberPointForChangeExcess}" Value="False"/>
                              <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MaxFreqDeviation}" Value="False"/>

                            </MultiDataTrigger.Conditions>
                            <Setter Property="IsEnabled" Value="True"/>
                          </MultiDataTrigger>
                        </Style.Triggers>
                      </Style>
                    </Button.Style>
                  </Button>
              </Grid>
            </GroupBox>
            <GridSplitter Grid.Column="1" ShowsPreview="False" Width="3" HorizontalAlignment="Center" VerticalAlignment="Stretch" Grid.RowSpan="3"></GridSplitter>
            <GroupBox  Header="{x:Static res:Resources.Sensors}"  Margin="0, 5, 5, 5" Grid.Column="2" Grid.RowSpan="3" >
                <Grid>
                  <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*" />
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                      <RowDefinition Height="*"></RowDefinition>
                      <RowDefinition Height="Auto"></RowDefinition>
                      <RowDefinition Height="*"></RowDefinition>
                  </Grid.RowDefinitions>
                  <cdg:CustomDataGrid Grid.Column="0" Grid.Row="0" IsReadOnly="True" Margin="5"  SelectionUnit="FullRow"  SelectionMode="Extended" AutoGenerateColumns="False" IsSynchronizedWithCurrentItem="True" ItemsSource="{Binding ShortSensors}" SelectedItemsList="{Binding CurrentShortSensor, Mode=TwoWay}">
                    <DataGrid.Columns>
                      <DataGridTextColumn Header="{x:Static res:Resources.Id}" Binding="{Binding Path=Id}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.Status}" Binding="{Binding Path=Status}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.Title}" Binding="{Binding Path=Title}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.Name}" Binding="{Binding Path=Name}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.Adm}" Binding="{Binding Path=Administration}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.Network}" Binding="{Binding Path=NetworkId}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.LowFreqMHz}" Binding="{Binding Path=LowerFreq}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.UpFreqMHz}" Binding="{Binding Path=UpperFreq}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.Equipment}" Binding="{Binding Path=EquipName}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.Manufacturer}" Binding="{Binding Path=EquipManufacturer}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.SN}" Binding="{Binding Path=EquipCode}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.Antenna}" Binding="{Binding Path=AntName}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.Gain}" Binding="{Binding Path=AntGainMax}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.BringIntoUse}" Binding="{Binding Path=BiuseDate}"></DataGridTextColumn>
                      <DataGridTextColumn Header="{x:Static res:Resources.EndOfUse}" Binding="{Binding Path=EouseDate}"></DataGridTextColumn>
                    </DataGrid.Columns>
                    <DataGrid.InputBindings>
                      <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding DoubleClickSensorCommand}" CommandParameter="{Binding ShortSensors/}"/>
                    </DataGrid.InputBindings>
                  </cdg:CustomDataGrid>
                  <GridSplitter Grid.Column="0" Grid.Row="1" ShowsPreview="False" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" ></GridSplitter>
                  <maps:Map Grid.Column="0" Grid.Row="2" DrawingData="{Binding CurrentMapData}"></maps:Map>
              </Grid>
            </GroupBox>
        </Grid>
    </DockPanel>
</UserControl>