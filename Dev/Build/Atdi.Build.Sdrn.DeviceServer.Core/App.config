<?xml version="1.0" encoding="utf-8" ?>

<!-- 
     Данный файл не является конечной конфигурацией, а представляет собой структуру и шаблон кинфигурирорвания, 
     основой для описания нужного сценария загрузки и конфигурации.
     Его нужно использовать как подложку будущей конфигурации, 
     следуюя рекомендациям и заложеным структурным правилам конфигурирования описаных ниже
-->

<configuration>
  <!-- Секция определния методаных конфигурации платформы и сервреа приложений-->
  <configSections>
    <section name="atdi.platform" type="Atdi.Platform.ConfigElements.AtdiPlatformConfigElement, Atdi.Platform.Configurator" allowLocation="true" allowDefinition="Everywhere"/>
  </configSections>
  
  <!-- версия CLR -->
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
  </startup>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-12.0.0.0" newVersion="12.0.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <!-- Есть хранилище задач, необходимо определить строку соединения к нему -->
  <!-- Имя конфигурации может быть любым, главнео его крреткно указать в контексте -->
  <connectionStrings>
    <add name="DB_SDRN_DeviceServer_ConnectionString" connectionString=""/>
  </connectionStrings>

  <atdi.platform>

    <properties>
      <!-- Каталог размещения всех достпуных компоеннтов сервреа прилоежния -->
      <property name="SearchAssembliesStartPath" value=""/>
      <!-- Используется для дополнительной фильтрации вложенных каталогов -->
      <!-- В основном предназначено для тестирования и разработки
            например указав значение "\bin\Debug$" будут использовать сборки из отладочной версии
      -->
      <property name="SearchAssembliesPattern" value=""/>

    </properties>

    <!-- Низкоуровневая конфигурация DI-контейнера как основы платформы -->
    <servicesContainer type="Atdi.Platform.ServicesContainer.Castle.WindsorServicesContainer, Atdi.Platform.ServicesContainer">
      <components>
        <!-- Сервис локализции, используется логером -->
        <component service="Atdi.Platform.IResourceResolver, Atdi.Platform" type="Atdi.Platform.DefaultResourceResolver, Atdi.Platform" lifetime="Singleton">
          <parameters>
            <parameter name="DefaultLang" value="en-us"/>
          </parameters>
        </component>
      </components>

    </servicesContainer>

    <!-- Секция инициализации ядра платформы нужными сервисами -->
    <installers>

      <!-- Сервис реализующий функционал асинхроного логгера -->
      <install type="Atdi.Platform.Logging.LoggerInstaller, Atdi.Platform.Logging">
        <parameters>
          <!-- Размер внутренего буфера накапливающего евенты -->
          <parameter name="EventsCapacity" value="20000"/>
          <!-- Уровень протоколирования, позволяет еще на фазе вызова фильтровать поступаемый в логерр события -->
          <parameter name="Levels" value=""/>
        </parameters>
      </install>

      <!-- Сервис потребителя событий логгера: консоль-->
      <install type="Atdi.Platform.Logging.EventsConsumers.ConsoleEventsConsumerInstaller, Atdi.Platform.Logging">
        <parameters>
          <!-- Кол-во евентов который потребитель в состоянии принять за один раз, остальные (более поздние) будут проигнорированы -->
          <parameter name="EventsCapacity" value="5000"/>
          <!-- Уровень события с которого необходимо принимать события, работате как фильтр -->
          <parameter name="Levels" value=""/>
          <!-- Фильтрация по контексту -->
          <parameter name="Contexts" value=""/>
          <!-- Фильтрация по категории -->
          <parameter name="Categories" value=""/>
        </parameters>
      </install>


      <!-- Сервис потребителя событий логгера: ввыод событий в файл, можно подключать несколько раз с разной конфигурацией -->
      <install type="Atdi.Platform.Logging.EventsConsumers.FileEventsConsumerInstaller, Atdi.Platform.Logging">
        <parameters>
          <!-- Катало куда писать логи -->
          <parameter name="FolderPath" value=""/>
          <!-- Префикс к файлу лога -->
          <parameter name="FilePrefix" value=""/>
          <!-- Уровень события с которого необходимо принимать события, работате как фильтр -->
          <parameter name="Levels" value=""/>
          <!-- Фильтрация по контексту -->
          <parameter name="Contexts" value=""/>
          <!-- Фильтрация по категории -->
          <parameter name="Categories" value=""/>
        </parameters>
      </install>

      <!-- Сервис базового функционала сервера приложений -->
      <install type="Atdi.Platform.AppServer.ServerInstaller, Atdi.Platform.AppServer">
      </install>

    </installers>

    <!-- Секция конфигурирования сервера приложений 
        Атрибут instance это имя интсанса сервера приложений, желательно делать уникальным, 
        Важно: в будущем будет использоваться как элемент адресации точки ифнраструктуры 
    -->
    <appServer instance="SdrnDeviceAppServer">

      <!-- общие свойства сервера приложения-->
      <properties>
        
      </properties>

      <!-- Секцяя регистрации прикладных компонентов сервера приложения -->
      <components>

  <!-- Точка регистрации базовых компонентов сервера устройств -->
        
        <!-- Базовая компонента 1:  Entity ORM - работа с сущностями хранилища сервера устройств, пока стартует самая первая. 
             Описание параметров смотреть в файле конфигурации "Atdi.CoreServices.EntityOrm.dll.config" -->
        <component type="EntityOrmCoreServices" assembly="Atdi.CoreServices.EntityOrm">
          <parameters>
          </parameters>
        </component>

        <!-- Базовая компонента 2:  Data Layer with Data Context - компонента доступа к хранилищу. 
             Описание параметров смотреть в файле конфигурации "Atdi.CoreServices.DataLayer.dll.config" -->
        <component type="DataLayerCoreServices" assembly="Atdi.CoreServices.DataLayer">
          <parameters>
          </parameters>
        </component>


        <!-- Базовая с 3:  Device Server Core: Controller & Processing - компонента седержит базовый функционал сервера устройств (реализация контроллера, процессинга задач, коннектор к шине SDRN). 
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.dll.config" -->
        <component type="SdrnDeviceServerAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer">
          <parameters>
          </parameters>
        </component>

  <!-- Точка регистрации компонентов CRUD-хранилищ (Repository)-->

        <!-- Компонента CRUD-хранилищ 1: Repository - компонента хранилищ задач, комманд и прочих сообщений поступаемых с шины и в шину. 
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.Repositories.dll.config" -->
        <component type="RepositoryDeviceServices" assembly="Atdi.AppUnits.Sdrn.DeviceServer.Repositories">
          <parameters>
          </parameters>
        </component>

  <!-- Точка регистрации компонентов обработчиков сообщений поступаемых с шины SDRN -->
        
        <!-- Компонента обработчиков сообщений 1: Messages handlers - компонента содержит базовый набор обработчиков сообщений шины SDRN. 
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.Messaging.dll.config" -->
        <component type="SdrnDeviceServerMessagingAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer.Messaging">
          <parameters>
          </parameters>
        </component>


  <!-- Точка регистрации компонентов адаптеров -->

        <!-- Компонента адаптера: GPS 
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.Adapters.GPS.dll.config" -->
        <component type="SdrnDeviceServerGPSAdapterAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer.Adapters.GPS">
          <parameters>
          </parameters>
        </component>

        <!-- Компонента адаптера: SignalHound 
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.Adapters.SignalHound.dll.config" -->
        <component type="SdrnDeviceServerSignalHoundAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer.Adapters.SignalHound">
          <parameters>
          </parameters>
        </component>

        <!-- Компонента адаптера: SpectrumAnalyzer 
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.Adapters.SpectrumAnalyzer.dll.config" -->
        <component type="SdrnDeviceServerSpectrumAnalyzerAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer.Adapters.SpectrumAnalyzer">
          <parameters>
          </parameters>
        </component>

  
  <!-- Точка регистрации компонентов процесинга: воркеры задача, обработчики результатов, конверторы типов результатов -->

        <!-- Компонента процесинга: Основные обработчки и воркеры 
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.Processing.dll.config" -->
        <component type="SdrnDeviceServerProcessingAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer.Processing">
          <parameters>
          </parameters>
        </component>

        <!-- Компонента процесинга: обработчки и воркеры измерений
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.Processing.Measurements.dll.config" -->
        <component type="SdrnDeviceServerProcessingMeasurementsAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer.Processing.Measurements">
          <parameters>
          </parameters>
        </component>

  <!-- Точка регистрации компонентов Web API -->

        <!-- Компонента Web API: хост сервера, обязательный, без него другие компоненты Web API не смогут опубликовать свой функционал
             Описание параметров смотреть в файле конфигурации "Atdi.WebApiServices.SelfHost.dll.config" -->
        <component type="SelfHostWebApiServices" instance="SdrnDeviceWebApiServer" assembly="Atdi.WebApiServices.SelfHost">
          <parameters>
          </parameters>
        </component>
        
      </components>
    </appServer>

  </atdi.platform>
</configuration>