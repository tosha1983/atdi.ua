<?xml version="1.0" encoding="utf-8" ?>

<!-- 
     Данный файл не является конечной конфигурацией, а представляет собой структуру и шаблон кинфигурирорвания, 
     основой для описания нужного сценария загрузки и конфигурации.
     Его нужно использовать как подложку будущей конфигурации, 
     следуюя рекомендациям и заложеным структурным правилам конфигурирования описаных ниже
-->

<configuration>
  <!-- Секция определния методаных конфигурации платформы и сервреа приложений-->
  <configSections>
    <section name="atdi.platform" type="Atdi.Platform.ConfigElements.AtdiPlatformConfigElement, Atdi.Platform.Configurator" allowLocation="true" allowDefinition="Everywhere"/>
  </configSections>
  
  <!-- версия CLR -->
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
  </startup>
  <runtime>
   <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-12.0.0.0" newVersion="12.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Net.Http.Formatting" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.7.0" newVersion="5.2.7.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <!-- Есть хранилище задач, необходимо определить строку соединения к нему -->
  <!-- Имя конфигурации может быть любым, главнео его крреткно указать в контексте -->
  <connectionStrings>
    <add name="DB_SDRN_DeviceServer_ConnectionString" connectionString="Application Name=SDRN.DeviceServer;Server=DESKTOP-23A9G6R\SQLEXPRESS;Database=DEVICE_TEST;UID=sa; PWD = j3qq5012zX; MultipleActiveResultSets=True"/>
  </connectionStrings>

  <atdi.platform>

    <properties>
      <!-- Каталог размещения всех достпуных компоеннтов сервреа прилоежния -->
 	<property name="SearchAssembliesStartPath" value="c:\Projects\atdi.ua\Dev\Hosts\Atdi.AppServer.Sdrn.DeviceServer.Console.SG\bin\Debug\"/>
      <property name="SearchAssembliesPattern" value=""/>
      <property name="SearchAssembliesPattern_" value=""/>
    </properties>

    <!-- Низкоуровневая конфигурация DI-контейнера как основы платформы -->
    <servicesContainer type="Atdi.Platform.ServicesContainer.Castle.WindsorServicesContainer, Atdi.Platform.ServicesContainer">
      <components>
        <!-- Сервис локализции, используется логером -->
        <component service="Atdi.Platform.IResourceResolver, Atdi.Platform" type="Atdi.Platform.DefaultResourceResolver, Atdi.Platform" lifetime="Singleton">
          <parameters>
            <parameter name="DefaultLang" value="en-us"/>
          </parameters>
        </component>
      </components>

    </servicesContainer>

    <!-- Секция инициализации ядра платформы нужными сервисами -->
    <installers>

      <!-- Сервис реализующий функционал асинхроного логгера -->
      <install type="Atdi.Platform.Logging.LoggerInstaller, Atdi.Platform.Logging">
        <parameters>
          <!-- Размер внутренего буфера накапливающего евенты -->
          <parameter name="EventsCapacity" value="20000"/>
          <!-- Уровень протоколирования, позволяет еще на фазе вызова фильтровать поступаемый в логерр события -->
          <parameter name="Levels" value=""/>
        </parameters>
      </install>


      <install type="Atdi.Platform.Logging.EventsConsumers.ConsoleEventsConsumerInstaller, Atdi.Platform.Logging">
        <parameters>
          <parameter name="EventsCapacity" value="5000"/>
          <parameter name="Levels" value="Error"/>
          <parameter name="Contexts_" value="SQL Server Engine"/>
          <parameter name="Categories_" value="Executing command"/>
        </parameters>
      </install>

      <!-- Сервис потребителя событий логгера: консоль-->
      <!-- <install type="Atdi.Platform.Logging.EventsConsumers.ConsoleEventsConsumerInstaller, Atdi.Platform.Logging"> -->
        <!-- <parameters> -->
          <!-- Кол-во евентов который потребитель в состоянии принять за один раз, остальные (более поздние) будут проигнорированы -->
          <!-- <parameter name="EventsCapacity" value="5000"/> -->
          <!-- Уровень события с которого необходимо принимать события, работате как фильтр -->
          <!-- <parameter name="Levels" value="Info"/> -->
          <!-- Фильтрация по контексту -->
          <!-- <parameter name="Contexts" value=""/> -->
          <!-- Фильтрация по категории -->
          <!-- <parameter name="Categories" value=""/> -->
        <!-- </parameters> -->
      <!-- </install> -->


      <!-- Сервис потребителя событий логгера: ввыод событий в файл, можно подключать несколько раз с разной конфигурацией -->
      <install type="Atdi.Platform.Logging.EventsConsumers.FileEventsConsumerInstaller, Atdi.Platform.Logging">
        <parameters>
          <!-- Уровень события с которого необходимо принимать события, работате как фильтр -->
          <parameter name="Levels" value="Error"/>
          <!-- Фильтрация по контексту -->
          <parameter name="Contexts" value=""/>
          <!-- Фильтрация по категории -->
          <parameter name="Categories" value=""/>
        </parameters>
      </install>

      <!-- Сервис базового функционала сервера приложений -->
      <install type="Atdi.Platform.AppServer.ServerInstaller, Atdi.Platform.AppServer">
      </install>

    </installers>

    <!-- Секция конфигурирования сервера приложений 
        Атрибут instance это имя интсанса сервера приложений, желательно делать уникальным, 
        Важно: в будущем будет использоваться как элемент адресации точки ифнраструктуры 
    -->
    <appServer instance="SdrnDeviceAppServer">

      <!-- общие свойства сервера приложения-->
      <properties>
        <property name="ThreadPoolSize" value="500"/>
      </properties>

      <!-- Секцяя регистрации прикладных компонентов сервера приложения -->
      <components>
		<component type="MonitoringCoreServices" assembly="Atdi.CoreServices.Monitoring">
          <parameters>
            <!-- Размер циклического буфера сообщений из лога -->
            <parameter name="LogEvent.BufferSize" value="5000"/>
            
            <!-- Размер циклического буфера сообщений в сборщике -->
            <parameter name="Collector.BufferSize" value="10000"/>
            
            <!-- Период снятия статистики показателей всех счетчиков -->
            <parameter name="Collector.Timeout" value="1000"/>
          </parameters>
        </component>

  <!-- Точка регистрации базовых компонентов сервера устройств -->
        
        <!-- Базовая компонента 1:  Entity ORM - работа с сущностями хранилища сервера устройств, пока стартует самая первая. 
             Описание параметров смотреть в файле конфигурации "Atdi.CoreServices.EntityOrm.dll.config" -->
        <component type="EntityOrmCoreServices" assembly="Atdi.CoreServices.EntityOrm">
          <parameters>
	 <parameter name="EnvironmentFileName" value="Metadata/Environment.xml"/>
          </parameters>
        </component>

        <!-- Базовая компонента 2:  Data Layer with Data Context - компонента доступа к хранилищу. 
             Описание параметров смотреть в файле конфигурации "Atdi.CoreServices.DataLayer.dll.config" -->
        <component type="DataLayerCoreServices" assembly="Atdi.CoreServices.DataLayer">
          <parameters>
			<parameter name="DataContexts" value="{name=SDRN_DeviceServer_DB, dataEngine=SqlServer, connectionStringConfig=DB_SDRN_DeviceServer_ConnectionString};{name=Platform, dataEngine=Assemblies}"/>
			<!-- <parameter name="DataContexts" value="{name=Platform, dataEngine=Assemblies}"/> -->
          </parameters>
        </component>

        <component type="AssembliesDataLayerCoreServices" assembly="Atdi.CoreServices.DataLayer.Assemblies">
        </component>

        <!--component type="OracleDataLayerCoreServices" assembly="Atdi.CoreServices.DataLayer.Oracle">
        </component-->

        <component type="SqlServerDataLayerCoreServices" assembly="Atdi.CoreServices.DataLayer.SqlServer">
        </component>


        <!-- Базовая с 3:  Device Server Core: Controller & Processing - компонента седержит базовый функционал сервера устройств (реализация контроллера, процессинга задач, коннектор к шине SDRN). 
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.dll.config" -->
        <component type="SdrnDeviceServerAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer">
          <parameters>
  
  <parameter name="License.FileName" value="./License/LIC-DBD12-A00-442.SENSOR-DBD12-A00-5169.lic" />
            <parameter name="License.OwnerId" value="EAAAAChazO3rBbXjJpAdk8Y/OIfjMao9kk42KWWDiMYWd37JY+t3KtvXo+WaNpNPklCQzg==" />
            <parameter name="License.ProductKey" value="EAAAAD2Jd5vvtNclzLwgGaqlL9hNLGO6PeGIRJtufTIxF/xkBHhA8bYPTd2PrP3WJa+/7A==" />
            <parameter name="RabbitMQ.Host" value="10.1.1.131"/>
            <parameter name="RabbitMQ.Port" value="5672"/>
            <parameter name="RabbitMQ.VirtualHost" value="Control_137"/>
            <parameter name="RabbitMQ.User" value="SDR_Client"/>
            <parameter name="RabbitMQ.Password" value="EAAAAMwqCHGus3dL3D/2HXrdSw4k6Ezy1XGPj5PfDpDt0sIw"/>
            <parameter name="SDRN.ApiVersion" value="2.0"/>
            <parameter name="SDRN.Server.Instance" value="SDRNSV-SBD13-G65-3690"/>
            <parameter name="SDRN.Server.QueueNamePart" value="Q.SDRN.Server"/>
            <parameter name="SDRN.Device.SensorTechId" value="rs16274a-505a-4f29-8be8-6d02695e78c2"/>
            <parameter name="SDRN.Device.Exchange" value="EX.SDRN.Device"/>
            <parameter name="SDRN.Device.QueueNamePart" value="Q.SDRN.Device"/>
            <parameter name="SDRN.Device.MessagesBindings" value="{messageType=RegisterSensor, routingKey=#01};{messageType=SendCommandResult, routingKey=#02};{messageType=SendMeasResults, routingKey=#03};{messageType=SendEntity, routingKey=#04};{messageType=SendEntityPart, routingKey=#05};{messageType=UpdateSensor, routingKey=#06}"/>
            <parameter name="SDRN.MessageConvertor.UseEncryption" value="false"/>
            <parameter name="SDRN.MessageConvertor.UseCompression" value="false"/>
          </parameters>
        </component>

  <!-- Точка регистрации компонентов CRUD-хранилищ (Repository)-->

        <!-- Компонента CRUD-хранилищ 1: Repository - компонента хранилищ задач, комманд и прочих сообщений поступаемых с шины и в шину. 
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.Repositories.dll.config" -->
        <component type="RepositoryDeviceServices" assembly="Atdi.AppUnits.Sdrn.DeviceServer.Repositories">
          <parameters>
	    <parameter name="FolderTaskParameters" value="C:\BOX\DB\Tasks"/>
	    <parameter name="FolderMeasResults" value="C:\BOX\DB\Result\MeasResults"/>
            <parameter name="DeviceCommandResult" value="C:\BOX\DB\Result\DeviceCommandResults"/>
            <parameter name="FolderDeviceCommand" value="C:\BOX\DB\SendCommand"/>
          </parameters>
        </component>

  <!-- Точка регистрации компонентов обработчиков сообщений поступаемых с шины SDRN -->
        
         <!-- Компонента обработчиков сообщений 1: Messages handlers - компонента содержит базовый набор обработчиков сообщений шины SDRN. 
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.Messaging.dll.config" -->
        <component type="SdrnDeviceServerMessagingAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer.Messaging">
          <parameters>
            <parameter name="CompareTraceJustWithRefLevels" value="false"/>
            <parameter name="AutoDivisionEmitting" value="true"/>
            <parameter name="FiltrationTrace" value="true"/>
            <parameter name="DifferenceMaxMax.double" value="20"/>
            <parameter name="allowableExcess_dB.double" value="10"/>
            <parameter name="SignalizationNCount" value="1000000"/>
            <parameter name="SignalizationNChenal" value="400"/>
            <parameter name="PercentForCalcNoise.double" value="10"/>
            <!--  проводить корреляционный анализ между излучениями по умолчанию лож -->
            <parameter name="CorrelationAnalize" value="false"/>
            <!-- коєфициент кореляции при котором обединяем излучения по умолчанию 0.7  -->
            <parameter name="CorrelationFactor.double" value="0,85"/>
            <!-- проверять совподение частоты сигнала с частотой канала по умолчанию лож  -->
            <parameter name="CheckFreqChannel" value="false"/>
            <!-- true значит надо анализировать согласно существующим частото каналам  по умолчанию false  -->
            <parameter name="AnalyzeByChannel" value="false"/>
            <!-- true значит надо выполнять вложенное вокфлоу по SysInfo по умолчанию false   -->
            <parameter name="AnalyzeSysInfoEmission" value="false"/>
            <!--   true значит надо выполнять вложенное вокфлоу по BW по умолчанию false -->
            <parameter name="DetailedMeasurementsBWEmission" value="false"/>
            <!--  ожидаемій стандарт сигналов (GSM or LTE or UMTS) по умолчанию null -->
            <parameter name="Standard" value=""/>
            <!-- уровень шума на входе приемника по умолчанию измерение автошума = -999 используется в  namespace Atdi.AppUnits.Sdrn.DeviceServer.Processing.Measurements строка 61 (в хендлере)  -->
            <parameter name="triggerLevel_dBm_Hz.double" value="-999"/>
            <!--   минимальное количество точек для нахождения излучения Необходимо для исключения случайных выбросов спектров по умолчанию 10 -->
            <parameter name="NumberPointForChangeExcess" value="10"/>
            <!-- допустимое превышение реферативного уровня по умолчанию 10  -->
            <parameter name="InterruptionAllowableExcess_dB.double" value="10"/>
            <!-- характеризует размер окна для обработки и хранения спектра излучения по умолчанию 1.1  -->
            <parameter name="windowBW.double" value="1.,5"/>
            <!--  используется для нахождения BW методом ndBDown по умолчанию 25  -->
            <parameter name="DiffLevelForCalcBW.double" value="25"/>
            <!--  уровень ndBDown для поиска конца излучения метод используется если нельзя определить BW класическим методом по умолчанию 25 -->
            <parameter name="nDbLevel_dB.double" value="15"/>
            <!--  количество точек которые игнорируются при поиске концов излучения метод используется если нельзя определить BW класическим методом по умолчанию 1 -->
            <parameter name="NumberIgnoredPoints" value="0"/>
            <!--  минимально допустимое превышение уровня шума максимумом излучения метод используется если нельзя определить BW класическим методом по умолчанию 5 -->
            <parameter name="MinExcessNoseLevel_dB.double" value="5"/>
            <!--   время для группировки записей workTime по умолчанию 60 -->
            <parameter name="TimeBetweenWorkTimes_sec" value="60"/>
            <!--  принцип объединения спектра 0 - Best Emmiting (ClearWrite), 1 - MaxHold, 2 - Avarage по умолчанию 0 -->
            <parameter name="TypeJoinSpectrum" value="0"/>
            <!-- определяет насколько процентов должно совпадать излучение если BW определен по умолчанию 70  -->
            <parameter name="CrossingBWPercentageForGoodSignals.double" value="70"/>
            <!-- определяет насколько процентов должно совпадать излучение если BW не определен по умолчанию 40  -->
            <parameter name="CrossingBWPercentageForBadSignals.double" value="40"/>
            
          </parameters>
        </component>


  <!-- Точка регистрации компонентов адаптеров -->

        

         <component type="SdrnDeviceServerSpectrumAnalyzerAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer.Adapters.SpectrumAnalyzer">
          <parameters>
            <!-- Серийный номер прибора. -->
            <parameter name="SerialNumber" value="100706"/>
            
            <!-- IP адрес прибора например 192.168.2.110-->
            <parameter name="IPAddress" value="10.1.1.181"/>
            
            <!-- Включает/Выключает отображение данных на экране прибора тип bool соответственно true/false-->
            <parameter name="DisplayUpdate" value="false"/>
          
            <!-- Включает/Выключает выбора времени свипировани(измерения) из параметров  тип bool соответственно true/false, 
                 true = прибор всегда настраивает время свипирования автоматически
                 false = прибор SweepTime будит установленно из параметров, если в параметрах Auto то будит установленно автоматическая настройка-->
            <parameter name="OnlyAutoSweepTime" value="true"/>
      
            <!-- Настройка оптимизации работы FFT (на данный момент характерно только для R&S FPL) тип int, доступно 0,1,2
                 0 = Auto Настраивается прибором автоматически
                 1 = Dynamic Настраивается на лучший динамический диапазон/лучший шум
                 2 = Speed Настраивается на лучшую скорость(где-то в 2 и более раза быстрее) но может быть выше шум(не всегда и зависит от настроек)-->
            <parameter name="Optimization" value="2"/>
          </parameters>
        </component>


  
  <!-- Точка регистрации компонентов процесинга: воркеры задача, обработчики результатов, конверторы типов результатов -->

        <!-- Компонента процесинга: Основные обработчки и воркеры 
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.Processing.dll.config" -->
        <component type="SdrnDeviceServerProcessingAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer.Processing">
          <parameters>
   <!-- Время в миллисекундах задержки потока обработки отложенных задач -->
            <parameter name="DurationWaitingEventWithTask" value="600000"/>

            <!-- Время в минутах, которое определяет какие задачи должны запускаться
                 Если время до запуска задачи меньше времени MaxDurationBeforeStartTimeTask, то задача сразу запускается,
             Если время до запуска больше MaxDurationBeforeStartTimeTask, то задача попадает в очередь отложенных задач  -->
            <parameter name="MaxDurationBeforeStartTimeTask" value="20"/>

	    <!-- Время в миллисекундах в течении которого мы посылаем один результат для типа измерения Signaling   -->
            <!-- пример  value="60000" -->
            <parameter name="durationForSendResultSignaling" value="900000"/>

            <!-- Время в миллисекундах в течении которого мы посылаем один результат для типа измерения BandWidth   -->
            <!-- пример  value="60000" -->
            <parameter name="durationForSendResultBandWidth" value="600000"/>

            <!-- Время в миллисекундах в течении которого мы посылаем один результат для типа измерения SysInfo   -->
            <!-- пример  value="60000" -->
            <parameter name="durationForSendResultSysInfo" value="600000"/>	    

            <!-- Время в миллисекундах в течении которого мы посылаем один результат для типа измерения Spectrum Occupation   -->
            <!-- пример  value="60000" -->
            <parameter name="durationForSendResultSO" value="900000"/>


            <!-- Признак для включения функции blackman  (сигнализация)  -->
            <!-- пример  value="true" -->
            <parameter name="Smooth" value="true"/>

	    <!-- период в миллисекундах временной приостановки потока выполнения задачи отправки очередного результата в шину RabbitMQ -->
            <parameter name="SleepTimePeriodSendingBus_ms" value="60000"/>

            <!-- период в миллисекундах временной приостановки потока выполнения задачи отправки очередного результата в шину RabbitMQ при возникновении ошибки -->
            <parameter name="SleepTimePeriodWaitingErrorSendingBus_ms" value="30000"/>
            


            <!-- пример  value="1000" -->
            <parameter name="SleepTimePeriodForWaitingStartingMeas_ms" value="1000"/>

            <!-- Время в миллисекундах  ожидания сообщения типа SensorRegistrationResult в воркере RegisterSensorTaskWorker  -->
            <parameter name="MaxTimeOutReceiveSensorRegistrationResult" value="300000"/>


            <!-- Время в миллисекундах  ожидания сообщения типа SpectrumOcupationResult в воркере SOTaskWorker -->
            <parameter name="maximumTimeForWaitingResultSO" value="5000"/>

            <!-- Специальный коэффициент для расчета времени приостановки потока, выполняющего измерение SO
             ДЛя огибок типа CommandFailureReason.NotFoundConvertor, CommandFailureReason.NotFoundDevice
             -->
            <parameter name="KoeffWaitingDevice" value="5000"/>

            <!--Погрешность для долготы-->
            <parameter name="LonDelta.double" value="0,0001"/>

            <!--Погрешность для широты-->
            <parameter name="LatDelta.double" value="0,00001"/>

            <!--  Погрешность для Asl -->
            <parameter name="AslDelta.double" value="5"/>

            <!--Периодичность в миллисекундах  отправки сообщений о координатах сенсора в SDRNS-->
            <parameter name="PeriodSendCoordinatesToSDRNS" value="60000"/>

            <!--Период в миллисекундах проверки наличия в БД новых тасков-->
            <parameter name="DurationWaitingCheckNewTasks" value="2000"/>

            <!-- период в миллисекундах временной приостановки потока выполнения задачи отправки уведомления об активности сенсора -->
            <parameter name="SleepTimePeriodSendActivitySensor_ms" value="60000"/>


            <!-- период в миллисекундах временной приостановки потока выполняющего "перевод" таска со статуса F в А (только для задач, которые восстанавливаются с БД и имеют статус F) -->
            <parameter name="SleepTimeForUpdateContextSOTask_ms" value="100"/>

            <!-- Время в миллисекундах  ожидания сообщения типа MeasResults в воркере SignalizationTaskWorker -->
            <parameter name="maximumTimeForWaitingResultSignalization" value="60000"/>

            <!-- Время в миллисекундах  ожидания сообщения  в воркере BandWidthTaskWorker -->
            <parameter name="maximumTimeForWaitingResultBandWidth" value="1000"/>

             <!--  Asl по умолчанию -->
            <parameter name="AslDefault.double" value="130"/>

            <!--  Default Longitude -->
            <parameter name="LonDefault.double" value="30,32523"/>

            <!--  Default Latitude -->
            <parameter name="LatDefault.double" value="50,23533"/>
                       

            <!-- Время в миллисекундах в течении которого мы посылаем один результат для типа измерения Level   -->
            <!-- пример  value="60000" -->
            <parameter name="durationForSendResultLevel" value="60000"/>
            

            <!-- Время в миллисекундах  ожидания сообщения типа GpsResult в воркере GPSWorker  -->
            <parameter name="DurationWaitingRceivingGPSCoord" value="5000"/>


            <!-- Признак, указывающий на включение режима обработки даннsх GPS-->
            <parameter name="EnableGPS" value="false"/>

          </parameters>
        </component>

        <!-- Компонента процесинга: обработчки и воркеры измерений
             Описание параметров смотреть в файле конфигурации "Atdi.AppUnits.Sdrn.DeviceServer.Processing.Measurements.dll.config" -->
        <component type="SdrnDeviceServerProcessingMeasurementsAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer.Processing.Measurements">
          <parameters>
	    <!-- Признак, указывающий на включение режима обработки BandWidth таска -->
            <parameter name="EnableBandWidthTask" value="false"/>

            <!-- Признак, указывающий на включение режима обработки SysInfo таска -->
            <parameter name="EnableSysInfoTask" value="true"/>
	    
          </parameters>
        </component>


          <!-- Точка регистрации компонентов Web API -->
        
        <component type="SelfHostWebApiServices" instance="SdrnDeviceWebApiServer" assembly="Atdi.WebApiServices.SelfHost">
          <parameters>
            <parameter name="Url" value="http://localhost:15070/appserver/v1"/>
          </parameters>
        </component>

        <component type="SdrnDeviceServerWebApiServices" assembly="Atdi.WebApiServices.Sdrn.DeviceServer">
          <parameters>
            <!-- Инстанс компоненты хоста Web API - в данном случаи равен "SdrnDeviceWebApiServer" из предыдущего подключения  -->
            <parameter name="Instance" value="SdrnDeviceWebApiServer"/>
          </parameters>
        </component>

        <component type="EntityOrmWebApiServices" assembly="Atdi.WebApiServices.EntityOrm">
          <parameters>
            <!-- Инстанс компоненты хоста Web API - в данном случаи равен "SdrnDeviceWebApiServer" из предыдущего подключения  -->
            <parameter name="Instance" value="SdrnDeviceWebApiServer"/>
          </parameters>
        </component>


      </components>
    </appServer>

  </atdi.platform>
</configuration>
