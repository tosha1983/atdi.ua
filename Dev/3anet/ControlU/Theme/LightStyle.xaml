<ResourceDictionary 
    x:Class="ControlU.Theme.LightStyle1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    
    xmlns:local="clr-namespace:ControlU.Theme">

    <SolidColorBrush x:Key="TitleBarBackgroundBrush" Color="#EFEFF2" />
    <SolidColorBrush x:Key="WindowBorderBrush" Color="#007ACC" />
    <SolidColorBrush x:Key="WindowBorderBrushInactive" Color="#999999" />
    <SolidColorBrush x:Key="WindowStatusForeground" Color="#FF4F4F4F" />
    <SolidColorBrush x:Key="WindowStatusForegroundInactive" Color="#FFFFFF" />
    <!--
    -->
    <SolidColorBrush x:Key="ControlForeground" Color="#FF4F4F4F" />
    <SolidColorBrush x:Key="ButtonBorderBrush" Color="#FFB9B9B9" />
    <LinearGradientBrush x:Key="ButtonBackgroundBorder" EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
        <GradientStop Color="#FFC1C1C1" Offset="1"/>
        <GradientStop Color="Gainsboro"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonBackgroundIsMouseOver" Color="#7F59A8DE"/>
    <LinearGradientBrush x:Key="LeftReceiverButtonBackgroundIsMouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#BF59A8DE" Offset="1"/>
        <GradientStop/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="RightReceiverButtonBackgroundIsMouseOver" EndPoint="0.5,1" StartPoint="0.5,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#BF59A8DE"/>
        <GradientStop Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ButtonBackgroundIsPressed" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFA0A0A0" Offset="1"/>
        <GradientStop Color="#FFC7C7C7"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="LeftReceiverButtonBackgroundIsPressed" EndPoint="0,1" StartPoint="0,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform CenterY="0.5" CenterX="0.5" Angle="90"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#FFA0A0A0" Offset="1"/>
        <GradientStop Color="#FFE5E5E5"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="RightReceiverButtonBackgroundIsPressed" EndPoint="0,1" StartPoint="0,0">
        <LinearGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                <RotateTransform CenterY="0.5" CenterX="0.5" Angle="90"/>
                <TranslateTransform/>
            </TransformGroup>
        </LinearGradientBrush.RelativeTransform>
        <GradientStop Color="#FFA0A0A0"/>
        <GradientStop Color="#FFE5E5E5" Offset="1"/>
    </LinearGradientBrush>

    <!--
    <Style x:Key="WindowStyleTitleBarButton" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#FF4F4F4F"/>
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="Transparent"
                            />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="#FFF" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="0.7" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{StaticResource WindowBorderBrush}"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="#FFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LightStyle" TargetType="{x:Type Window}">
        <Setter Property="Foreground" Value="#FF4F4F4F"/>
        <Setter Property="AllowsTransparency" Value="true" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">

                    <Grid
                        Margin="7"
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display">
                        <Border
                            x:Name="PART_Border"
                            Width="Auto"
                            Height="Auto"
                            Background="#EFEFF2"
                            BorderBrush="{StaticResource WindowBorderBrush}"
                            BorderThickness="1"
                            Padding="0">
                            <Border.Effect>
                                <DropShadowEffect
                                    Color="black"
                                    Opacity="0.5"
                                    BlurRadius="7"
                                    ShadowDepth="2"
                                    Direction="315"/>
                            </Border.Effect>
                            <DockPanel   
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                VerticalAlignment="Stretch"
                                >
                                <Border
                                    x:Name="TitleBar"
                                    DockPanel.Dock="Top"
                                    Background="{StaticResource TitleBarBackgroundBrush}"
                                    BorderThickness="0"
                                    MouseLeftButtonDown="TitleBarMouseLeftButtonDown"
                                    MouseMove="TitleBarMouseMove"
                                    >
                                    <Grid Height="32">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="36"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="34"/>
                                            <ColumnDefinition Width="34"/>
                                            <ColumnDefinition Width="34"/>
                                            <ColumnDefinition Width="34"/>
                                        </Grid.ColumnDefinitions>
                                        <Image
                                            x:Name="Icon"
                                            Grid.Column="0"
                                            Source="{Binding Path=Icon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                            HorizontalAlignment="Right"
                                            Margin="4,-7,0,7"
                                            Width="32"
                                            Height="32"
                                            MouseLeftButtonDown="IconMouseLeftButtonDown"
                                            />
                                        <TextBlock
                                            x:Name="Caption"
                                            Grid.Column="1"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Margin="4,0,0,0"
                                            FontFamily="Segoe UI"
                                            FontSize="12"
                                            Opacity="0.66"
                                            Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            />
                                        <Button
                                            x:Name="StyleButton" 
                                            Grid.Column="2"
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{StaticResource WindowStyleTitleBarButton}"
                                            Click="StyleButtonClick"
                                            >
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1"
                                                    Stretch="None"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Data="M0,8 H8 M0,7 H8 M0,6 H8"
                                                    />
                                            </Grid>
                                        </Button>
                                        <Button
                                            x:Name="MinButton" 
                                            Grid.Column="3"
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{StaticResource WindowStyleTitleBarButton}"
                                            Click="MinButtonClick"
                                            >
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1"
                                                    Stretch="None"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Data="M0,8 H8 M0,7 H8 M0,6 H8"
                                                    />
                                            </Grid>
                                        </Button>
                                        <Button
                                            Grid.Column="4"
                                            x:Name="MaxButton" 
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{StaticResource WindowStyleTitleBarButton}"
                                            Click="MaxButtonClick"
                                            >
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    x:Name="PART_MaxButton_Path"
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1"
                                                    Stretch="None"
                                                    RenderOptions.EdgeMode="Aliased"
                                                    Data="M0,0 H8 V8 H0 V0 M0,1 H8 M0,2 H8"
                                                    />
                                            </Grid>
                                        </Button>
                                        <Button
                                            Grid.Column="5"
                                            x:Name="CloseButton" 
                                            VerticalAlignment="Top"
                                            Width="34"
                                            Height="26"
                                            Style="{StaticResource WindowStyleTitleBarButton}"
                                            Click="CloseButtonClick"
                                            >
                                            <Grid MaxHeight="9" MaxWidth="9">
                                                <Path
                                                    Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                                                    StrokeThickness="1.5"
                                                    Stretch="None"
                                                    Data="M0,0 L8,8 M0,8 L8,0"
                                                    />
                                            </Grid>
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter />
                            </DockPanel>
                        </Border>
                        <Line
                            MouseDown="OnSizeNorth"
                            x:Name="lnSizeNorth"
                            Stroke="Transparent"   
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="1"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeSouth"
                            x:Name="lnSizeSouth"
                            Stroke="Transparent"
                            VerticalAlignment="Bottom" 
                            Cursor="SizeNS"
                            X1="1" X2="{TemplateBinding ActualWidth}" Y1="{TemplateBinding ActualHeight}" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeWest"
                            x:Name="lnSizeWest"
                            Stroke="Transparent"
                            Cursor="SizeWE"
                            X1="1" X2="1" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Line
                            MouseDown="OnSizeEast"
                            x:Name="lnSizeEast"
                            Stroke="Transparent"
                            HorizontalAlignment="Right" 
                            Cursor="SizeWE"
                            X1="{TemplateBinding ActualWidth}" X2="{TemplateBinding ActualWidth}" Y1="1" Y2="{TemplateBinding ActualHeight}"
                            StrokeThickness="3"
                            />
                        <Rectangle MouseDown="OnSizeNorthWest" x:Name="rectSizeNorthWest" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Left" />
                        <Rectangle MouseDown="OnSizeNorthEast" x:Name="rectSizeNorthEast" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Top" HorizontalAlignment="Right" />
                        <Rectangle MouseDown="OnSizeSouthWest" x:Name="rectSizeSouthWest" Cursor="SizeNESW" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
                        <Rectangle MouseDown="OnSizeSouthEast" x:Name="rectSizeSouthEast" Cursor="SizeNWSE" Fill="Transparent" Width="5" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_MaxButton_Path" Property="Data" Value="M0,3 H5 V8 H0 V3 M0,4 H5 M3,0 H8 V5 H7 M3,1 H8"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{StaticResource WindowBorderBrushInactive}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type StatusBar}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource WindowStatusForeground}" />
                        <Setter Property="Background" Value="{StaticResource WindowBorderBrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                        <Setter Property="Foreground" Value="{StaticResource WindowStatusForegroundInactive}" />
                        <Setter Property="Background" Value="{StaticResource WindowBorderBrushInactive}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
-->

    <SolidColorBrush x:Key="MyLightButtonBackgroundIsMouseOver" Color="#7F007ACC"/>
    <SolidColorBrush x:Key="MyLightButtonBackgroundIsPressed" Color="#FFC7C7C7"/>
    <SolidColorBrush x:Key="MyLightButtonBackgroundBorder" Color="#00C7C7C7"/>
    <SolidColorBrush x:Key="MyLightButtonBorderBrush" Color="#19000000" />

    <Style x:Key="MyButton" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="0" BorderBrush="{StaticResource MyLightButtonBorderBrush}" 
                                BorderThickness="1" Background="{StaticResource MyLightButtonBackgroundBorder}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MyLightButtonBackgroundIsMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource MyLightButtonBackgroundIsPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="3,3,3,3" BorderBrush="{StaticResource ButtonBorderBrush}" 
                                BorderThickness="1" Background="{StaticResource ButtonBackgroundBorder}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundIsMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundIsPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type RepeatButton}" TargetType="{x:Type RepeatButton}">

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="3,3,3,3" BorderBrush="{StaticResource ButtonBorderBrush}" 
                                BorderThickness="1" Background="{StaticResource ButtonBackgroundBorder}"/>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundIsMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundIsPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeftReceiverRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="3,0,0,3" BorderThickness="1,1,0,1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <RotateTransform CenterY="0.5" CenterX="0.5" Angle="90"/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#FFE5E5E5"/>
                                    <GradientStop Color="#FFBBBBBB" Offset="1"/>
                                    <GradientStop Color="#FFE5E5E5" Offset="0.397"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush  EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <RotateTransform CenterY="0.5" CenterX="0.5" Angle="90"/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="LightGray" Offset="1"/>
                                    <GradientStop Color="#FFE5E5E5"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource LeftReceiverButtonBackgroundIsMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource LeftReceiverButtonBackgroundIsPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RightReceiverRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="0,3,3,0" BorderThickness="0,1,1,1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <RotateTransform CenterY="0.5" CenterX="0.5" Angle="90"/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                    <GradientStop Color="#FFBBBBBB"/>
                                    <GradientStop Color="#FFE5E5E5" Offset="0.603"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush  EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <RotateTransform CenterY="0.5" CenterX="0.5" Angle="90"/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="LightGray"/>
                                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource RightReceiverButtonBackgroundIsMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource RightReceiverButtonBackgroundIsPressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="#FF787878" />
        <Setter Property="Background" Value="#FAFAFB" />
        <Setter Property="BorderBrush" Value="#EAEAEB" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="3,3,3,3" BorderBrush="{StaticResource ButtonBorderBrush}" 
                                BorderThickness="1" Background="{StaticResource ButtonBackgroundBorder}">
                            <Path Data="M -1,0 A 1,1 0 1 1 1,0 M -1,0 A 1,1 0 1 0 1,0"  Fill="{TemplateBinding Foreground}"
                                          Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" Width="13" Height="13">
                            </Path>
                        </Border>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True" >
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="#FF4696CC" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="#FF787878" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundIsMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="grid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBox_Switcher" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="30"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecking">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="slider" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                <SplineThicknessKeyFrame KeyTime="00:00:00.1500000" Value="1,1,1,1"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <DockPanel x:Name="dockPanel">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                        <Grid Margin="0" Width="62" Background="#FFE5E5E5">
                            <TextBlock x:Name="On" Text="ON" TextWrapping="Wrap" FontSize="14" HorizontalAlignment="Right" Margin="0,0,5,0" VerticalAlignment="Center"/>
                            <TextBlock x:Name="Off" Text="OFF" HorizontalAlignment="Left" Margin="3,3,0,0" FontSize="14"  TextWrapping="Wrap" VerticalAlignment="Center"/>
                            <Border HorizontalAlignment="Left" x:Name="slider" Width="30" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" 
                                    RenderTransformOrigin="0.5,0.5" Margin="1" Height="Auto" BorderBrush="{StaticResource ButtonBorderBrush}" 
                                    Background="{StaticResource ButtonBackgroundBorder}">

                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                            </Border>
                        </Grid>
                    </DockPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainStyleCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Border CornerRadius="3" Name="Border"  BorderBrush="{StaticResource ButtonBorderBrush}" 
                                        BorderThickness="1" Background="{StaticResource ButtonBackgroundBorder}" >
                            <!--<Border Name="ChechedBorder" MinWidth="21" BorderThickness="1" CornerRadius="1" MinHeight="21">
                                
                            </Border>-->
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="1"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True" >
                            <Trigger.Setters>
                                <!--<Setter TargetName="ChechedBorder" Property="Background"  Value="#FF007ACC"/>-->
                                <Setter TargetName="Border" Property="Background"  Value="#FF9A9A9A"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Trigger.Setters>
                                <!--<Setter TargetName="ChechedBorder" Property="Background"  Value="Gainsboro"/>-->
                                <Setter TargetName="Border" Property="Background"  Value="{x:Null}"/>
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="{x:Type GroupBox}" TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#FF99B4D1"/>
        <Setter Property="Foreground" Value="{StaticResource ControlForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="4"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="4"/>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4"
                  Grid.Row="1"
                  Grid.RowSpan="3"
                  Grid.Column="0"
                  Grid.ColumnSpan="4"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="Transparent"
                  Background="{TemplateBinding Background}"/>
                        <!-- ContentPresenter for the header -->
                        <Border x:Name="Header"
                  Padding="6,0,0,0"
                  Grid.RowSpan="2"
                  Grid.Column="1" Margin="0">
                            <ContentPresenter ContentSource="Header" 
                              RecognizesAccessKey="True" />
                        </Border>
                        <!-- Primary content for GroupBox -->
                        <ContentPresenter Grid.Row="2"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="{TemplateBinding Padding}"/>
                        <Border CornerRadius="0"
                  Grid.Row="1"
                  Grid.RowSpan="3"
                  Grid.ColumnSpan="4"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  BorderBrush="{TemplateBinding BorderBrush}">
                            <Border.OpacityMask>
                                <MultiBinding Converter=                            "{StaticResource BorderGapMaskConverter}"                            ConverterParameter="6">
                                    <Binding ElementName="Header"                         Path="ActualWidth"/>
                                    <Binding RelativeSource="{RelativeSource Self}"                         Path="ActualWidth"/>
                                    <Binding RelativeSource="{RelativeSource Self}"                         Path="ActualHeight"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar" >
                    <Grid x:Name="Root">
                        <Border Name="PART_Track" CornerRadius="0" Background="{x:Null}" BorderBrush="#FFC8C8C8" BorderThickness="1" />
                        <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left" Fill="#FF4696CC"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Getting vertical style working using technique described here: http://stackoverflow.com/a/6849237/7532 -->
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="Root" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270" />
                                </Setter.Value>
                            </Setter>

                            <Setter TargetName="Root" Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}"/>
                            <Setter TargetName="Root" Property="Height" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="BackgroundBrush" Color="#00222222" />
    <SolidColorBrush x:Key="HighlightedBrush" Color="#FF424242" />
    <SolidColorBrush x:Key="NormalBrush" Color="#77000000" />
    <ControlTemplate x:Key="EmptyTemplate" TargetType="{x:Type RepeatButton}">
        <Border Background="Transparent" />
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbTemplate" TargetType="{x:Type Thumb}">
        <Path x:Name="path" Height="9" Data="M4,0 L1,0 0,1 1,2 4,2 Z" Stroke="{StaticResource NormalBrush}" Stretch="Fill">
            <Path.Fill>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    <GradientStop Offset="0.05" Color="#FFEEEEEE"/>
                    <GradientStop Offset="0.95" Color="#FF646464"/>
                </LinearGradientBrush>
            </Path.Fill>
        </Path>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Stroke" TargetName="path" Value="{StaticResource HighlightedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbTemplateRight" TargetType="{x:Type Thumb}">
        <Grid>
            <Path x:Name="path" Height="19" Data="M4,0 L1,0 0,1 1,2 4,2 Z" Stroke="{StaticResource NormalBrush}" Stretch="Fill">
                <Path.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0.05" Color="#FFEEEEEE"/>
                        <GradientStop Offset="0.95" Color="#FF646464"/>
                    </LinearGradientBrush>
                </Path.Fill>
            </Path>
            <TextBlock Foreground="White" Margin="0,-2,2,0"  Text="{Binding Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}" VerticalAlignment="Center" FontSize="16" HorizontalAlignment="Right"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Stroke" TargetName="path" Value="{StaticResource HighlightedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbTemplateLeft" TargetType="{x:Type Thumb}">
        <Grid>
            <Path x:Name="path" Height="19" Data="M-4,0 L-1,0 0,1 -1,2 -4,2 Z" Stroke="{StaticResource NormalBrush}" Stretch="Fill">
                <Path.Fill>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                        <GradientStop Offset="0.05" Color="#FFEEEEEE"/>
                        <GradientStop Offset="0.95" Color="#FF646464"/>
                    </LinearGradientBrush>
                </Path.Fill>
            </Path>
            <TextBlock Foreground="White" Margin="2,-2,0,0"  Text="{Binding Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}" VerticalAlignment="Center" FontSize="16" HorizontalAlignment="Left"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Stroke" TargetName="path" Value="{StaticResource HighlightedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbTemplateUp" TargetType="{x:Type Thumb}">
        <Grid>
            <Path x:Name="path" Height="19" Width="30" Data="M4,0 -4,0 -4,3 0,4 4,3 Z" Stroke="{StaticResource NormalBrush}" Stretch="Fill" RenderTransformOrigin="0.5,0.5">
                <Path.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <LinearGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </LinearGradientBrush.RelativeTransform>
                        <GradientStop Offset="0.05" Color="#FFEEEEEE"/>
                        <GradientStop Offset="0.95" Color="#FF646464"/>
                    </LinearGradientBrush>
                </Path.Fill>
            </Path>
            <TextBlock Foreground="White" Text="{Binding Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Slider}}}" VerticalAlignment="Top" FontSize="16" HorizontalAlignment="Center" Margin="0,0,0,5" TextAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Stroke" TargetName="path" Value="{StaticResource HighlightedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MySlider" TargetType="{x:Type Slider}">
        <Setter Property="Foreground" Value="{StaticResource NormalBrush}" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="TickPlacement" Value="TopLeft" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TickBar Grid.Column="0" Width="4" Fill="{TemplateBinding Foreground}" Placement="Left" HorizontalAlignment="Left" />
                        <Path Grid.Column="1" Margin="0,4,4,4" Data="M0,1 L0,0 5,0 1,1 z" Stretch="Fill" Stroke="{TemplateBinding Foreground}">
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                    <GradientStop Offset="0" Color="#3000"/>
                                    <GradientStop Offset="0.8" Color="#407F7F7F"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <Track Grid.Column="1" x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="Slider.DecreaseLarge" Template="{StaticResource EmptyTemplate}" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Template="{StaticResource SliderThumbTemplate}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="Slider.IncreaseLarge" Template="{StaticResource EmptyTemplate}" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LevelSliderRight" TargetType="{x:Type Slider}">
        <Setter Property="Foreground" Value="{StaticResource NormalBrush}" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="TickPlacement" Value="TopLeft" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Path Grid.Column="0" Margin="0,9" Data="M0,0 0,1 " Stretch="Fill" 
                              Stroke="{TemplateBinding Foreground}" HorizontalAlignment="Left"/>
                        <TickBar Grid.Column="0" Width="5" Fill="{TemplateBinding Foreground}" Placement="Left" HorizontalAlignment="Left" Margin="-1,0,0,0">

                        </TickBar>
                        <Track Grid.Column="1" x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="Slider.DecreaseLarge" Template="{StaticResource EmptyTemplate}" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Template="{StaticResource SliderThumbTemplateRight}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="Slider.IncreaseLarge" Template="{StaticResource EmptyTemplate}" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LevelSliderLeft" TargetType="{x:Type Slider}">
        <Setter Property="Foreground" Value="{StaticResource NormalBrush}" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="TickPlacement" Value="TopLeft" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Path Grid.Column="1" Margin="0,9" Data="M0,0 0,1 " Stretch="Fill" 
                              Stroke="{TemplateBinding Foreground}" HorizontalAlignment="Right"/>


                        <TickBar Grid.Column="1" Width="5" Fill="{TemplateBinding Foreground}" Placement="Left" 
                                 HorizontalAlignment="Left" Margin="0" />
                        <Track Grid.Column="0" x:Name="PART_Track" Margin="0">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="Slider.DecreaseLarge" Template="{StaticResource EmptyTemplate}" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Template="{StaticResource SliderThumbTemplateLeft}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="Slider.IncreaseLarge" Template="{StaticResource EmptyTemplate}" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LevelSliderUp" TargetType="{x:Type Slider}">
        <Setter Property="Foreground" Value="{StaticResource NormalBrush}" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="TickPlacement" Value="TopLeft" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Path Grid.Column="0" Margin="14,0" Data="M0,0 1,0 " Stretch="Fill" 
                              Stroke="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Row="1"/>
                        <TickBar Fill="LightGray" VerticalAlignment="Top" SnapsToDevicePixels="True" Grid.Row="1"
                                  Placement="Top" Height="8"/>
                        <Track Grid.Column="0" x:Name="PART_Track" Margin="0,0,0,-7" Orientation="Horizontal" Panel.ZIndex="1" Grid.Row="0">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="Slider.DecreaseLarge" Template="{StaticResource EmptyTemplate}" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Template="{StaticResource SliderThumbTemplateUp}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="Slider.IncreaseLarge" Template="{StaticResource EmptyTemplate}" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>