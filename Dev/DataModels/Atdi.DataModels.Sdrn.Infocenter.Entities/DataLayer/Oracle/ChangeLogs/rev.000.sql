--
-- Create Schema Script 
--   Database Version   : 12.2.0.1.0 
--   TOAD Version       : 9.7.2.5 
--   DB Connect String  : ICSMV41 
--   Schema             : INFOC 
--   Script Created by  : ICSC 
--   Script Created at  : 11.08.2020 07:56:34 
--   Physical Location  :  
--   Notes              :  
--

-- Object Counts: 
--   Users: 1           Sys Privs: 17        
-- 
--   Functions: 1       Lines of Code: 63 
--   Indexes: 6         Columns: 6          
--   Sequences: 8 
--   Tables: 8          Columns: 89         


CREATE USER INFOC
  IDENTIFIED BY INFOC
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  ACCOUNT UNLOCK;
  -- 17 System Privileges for INFOC 
  GRANT UNLIMITED TABLESPACE TO INFOC;
  GRANT ALTER USER TO INFOC;
  GRANT DROP ANY VIEW TO INFOC;
  GRANT ALTER ANY PROCEDURE TO INFOC;
  GRANT DROP ANY TRIGGER TO INFOC;
  GRANT CREATE SEQUENCE TO INFOC;
  GRANT ALTER ANY TABLE TO INFOC;
  GRANT CREATE TRIGGER TO INFOC;
  GRANT CREATE VIEW TO INFOC;
  GRANT DELETE ANY TABLE TO INFOC;
  GRANT UNLIMITED TABLESPACE TO INFOC;
  GRANT ALTER ANY TRIGGER TO INFOC;
  GRANT CREATE SESSION TO INFOC;
  GRANT DROP ANY PROCEDURE TO INFOC;
  GRANT CREATE PROCEDURE TO INFOC;
  GRANT DROP ANY TABLE TO INFOC;
  GRANT CREATE TABLE TO INFOC;


CREATE SEQUENCE CLUTTERS_DESCS_CLUTTERS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE CLUTTERS_DESCS_FREQS_CLUTTERS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE CLUTTERS_DESCS_FREQS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE CLUTTERS_DESCS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE INTEGRATION_LOG_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE INTEGRATION_OBJECTS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE MAPS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE MAP_SECTORS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE TABLE CLUTTERS_DESCS_FREQS_CLUTTERS
(
  CODE              NUMBER(3),
  LINEAR_LOSS_DBKM  NUMBER(30,10),
  FLAT_LOSS_DB      NUMBER(30,10),
  REFLECTION_MHZ    NUMBER(30,10),
  NOTE              NCLOB,
  FREQ_ID           NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE CLUTTERS_DESCS_FREQS
(
  ID                NUMBER(15),
  CLUTTERS_DESC_ID  NUMBER(15),
  FREQ_MHZ          NUMBER(22,8),
  NOTE              NCLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE CLUTTERS_DESCS_CLUTTERS
(
  CODE              NUMBER(3),
  NAME              NVARCHAR2(150),
  NOTE              NCLOB,
  HEIGHT_M          NUMBER(3),
  CLUTTERS_DESC_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE MAPS
(
  ID               NUMBER(15),
  STATUS_CODE      NUMBER(3),
  STATUS_NAME      NVARCHAR2(50),
  STATUS_NOTE      NCLOB,
  CREATED_DATE     TIMESTAMP(7) WITH TIME ZONE  DEFAULT CURRENT_TIMESTAMP AT TIME ZONE 'GMT',
  TYPE_CODE        NUMBER(3),
  TYPE_NAME        NVARCHAR2(50),
  PROJECTION       NVARCHAR2(50),
  STEP_UNIT        NVARCHAR2(10),
  STEP_DATATYPE    NVARCHAR2(50),
  STEP_DATASIZE    NUMBER(3),
  AXIS_X_NUMBER    NUMBER(9),
  AXIS_X_STEP      NUMBER(9),
  AXIS_Y_NUMBER    NUMBER(9),
  AXIS_Y_STEP      NUMBER(9),
  CRD_UPL_X        NUMBER(9),
  CRD_UPL_Y        NUMBER(9),
  CRD_UPR_X        NUMBER(9),
  CRD_UPR_Y        NUMBER(9),
  CRD_LWL_X        NUMBER(9),
  CRD_LWL_Y        NUMBER(9),
  CRD_LWR_X        NUMBER(9),
  CRD_LWR_Y        NUMBER(9),
  CONTENT_SIZE     NUMBER(9),
  CONTENT_SOURCE   NVARCHAR2(50),
  FILE_NAME        NVARCHAR2(250),
  FILE_SIZE        NUMBER(9),
  MAP_NAME         NVARCHAR2(450),
  MAP_NOTE         NCLOB,
  SECTORS_COUNT    NUMBER(9),
  SECTORS_X_COUNT  NUMBER(9),
  SECTORS_Y_COUNT  NUMBER(9)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE MAP_SECTORS
(
  ID                NUMBER(15),
  MAP_ID            NUMBER(15),
  SECTOR_NAME       NVARCHAR2(250),
  CREATED_DATE      TIMESTAMP(7) WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP AT TIME ZONE 'GMT',
  AXIS_X_INDEX      NUMBER(9),
  AXIS_Y_INDEX      NUMBER(9),
  AXIS_X_NUMBER     NUMBER(9),
  AXIS_Y_NUMBER     NUMBER(9),
  CRD_UPL_X         NUMBER(9),
  CRD_UPL_Y         NUMBER(9),
  CRD_UPR_X         NUMBER(9),
  CRD_UPR_Y         NUMBER(9),
  CRD_LWL_X         NUMBER(9),
  CRD_LWL_Y         NUMBER(9),
  CRD_LWR_X         NUMBER(9),
  CRD_LWR_Y         NUMBER(9),
  CONTENT_SIZE      NUMBER(9),
  CONTENT_TYPE      NVARCHAR2(250),
  CONTENT_ENCODING  NVARCHAR2(250),
  CONTENT           BLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE INTEGRATION_OBJECTS
(
  ID                NUMBER(15),
  DATA_SOURCE       NVARCHAR2(150),
  OBJECT_NAME       NVARCHAR2(150),
  CREATED_DATE      TIMESTAMP(7) WITH TIME ZONE,
  SYNC_KEY_CONTENT  BLOB,
  SYNC_KEY_TYPE     NVARCHAR2(250),
  SYNC_KEY_NOTE     NCLOB,
  LAST_SYNC_TIME    TIMESTAMP(7) WITH TIME ZONE
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE INTEGRATION_LOG
(
  ID            NUMBER(15),
  OBJECT_ID     NUMBER(15),
  CREATED_DATE  TIMESTAMP(7) WITH TIME ZONE,
  STATUS_CODE   NUMBER(3),
  STATUS_NAME   NVARCHAR2(50),
  STATUS_NOTE   NCLOB,
  START_TIME    TIMESTAMP(7) WITH TIME ZONE,
  FINISH_TIME   TIMESTAMP(7) WITH TIME ZONE,
  SYNC_TOTAL    NCLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE CLUTTERS_DESCS
(
  ID            NUMBER(15),
  MAP_ID        NUMBER(15),
  CREATED_DATE  TIMESTAMP(7) WITH TIME ZONE     DEFAULT CURRENT_TIMESTAMP AT TIME ZONE 'GMT',
  NAME          NVARCHAR2(50),
  NOTE          NCLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX CLUTTERS_DESCS_PK ON CLUTTERS_DESCS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX CLUTTERS_DESCS_FREQS_PK ON CLUTTERS_DESCS_FREQS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MAPS_PK ON MAPS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MAP_SECTORS_PK ON MAP_SECTORS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX INTEGRATION_OBJECTS_PK ON INTEGRATION_OBJECTS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX INTEGRATION_LOG_PK ON INTEGRATION_LOG
(ID)
LOGGING
NOPARALLEL;


CREATE OR REPLACE FUNCTION       GetID (inttable_name IN varchar2)
return number
is
n number(15);


BEGIN


if inttable_name ='CLUTTERS_DESCS' then
select INFOC.CLUTTERS_DESCS_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='CLUTTERS_DESCS_CLUTTERS' then
select INFOC.CLUTTERS_DESCS_CLUTTERS_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='CLUTTERS_DESCS_FREQS' then
select INFOC.CLUTTERS_DESCS_FREQS_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='CLUTTERS_DESCS_FREQS_CLUTTERS' then
select INFOC.CLUTTERS_DESCS_FREQS_CLUTTERS_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='INTEGRATION_LOG' then
select INFOC.INTEGRATION_LOG_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='INTEGRATION_OBJECTS' then
select INFOC.INTEGRATION_OBJECTS_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='MAP_SECTORS' then
select INFOC.MAP_SECTORS_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='MAPS' then
select INFOC.MAPS_ID_SEQ.nextval
into n
from dual;
end if;

return(n);
end;
/

SHOW ERRORS;



--
-- Create Schema Script 
--   Database Version   : 12.2.0.1.0 
--   TOAD Version       : 9.7.2.5 
--   DB Connect String  : ICSMV41 
--   Schema             : SDRNSVR 
--   Script Created by  : ICSC 
--   Script Created at  : 11.08.2020 07:56:38 
--   Physical Location  :  
--   Notes              :  
--

-- Object Counts: 
--   Users: 1           Sys Privs: 17        
-- 
--   Functions: 1       Lines of Code: 45 
--   Indexes: 5         Columns: 5          
--   Sequences: 5 
--   Tables: 5          Columns: 28         


CREATE USER SDRNSVR
  IDENTIFIED BY SDRNSVR
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  ACCOUNT UNLOCK;
  -- 17 System Privileges for SDRNSVR 
  GRANT ALTER USER TO SDRNSVR;
  GRANT UNLIMITED TABLESPACE TO SDRNSVR;
  GRANT CREATE TRIGGER TO SDRNSVR;
  GRANT CREATE PROCEDURE TO SDRNSVR;
  GRANT CREATE SEQUENCE TO SDRNSVR;
  GRANT DROP ANY VIEW TO SDRNSVR;
  GRANT ALTER ANY TRIGGER TO SDRNSVR;
  GRANT DROP ANY PROCEDURE TO SDRNSVR;
  GRANT ALTER ANY TABLE TO SDRNSVR;
  GRANT DROP ANY TABLE TO SDRNSVR;
  GRANT CREATE TABLE TO SDRNSVR;
  GRANT DROP ANY TRIGGER TO SDRNSVR;
  GRANT ALTER ANY PROCEDURE TO SDRNSVR;
  GRANT CREATE VIEW TO SDRNSVR;
  GRANT UNLIMITED TABLESPACE TO SDRNSVR;
  GRANT DELETE ANY TABLE TO SDRNSVR;
  GRANT CREATE SESSION TO SDRNSVR;


CREATE SEQUENCE DRIVE_ROUTES_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE DRIVE_TESTS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE DRIVE_TESTS_POINTS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SM_MEAS_RESULTS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SM_MEAS_RESULTS_STATS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE TABLE SM_MEAS_RESULTS_STATS
(
  ID              NUMBER(15),
  GSID_COUNT      NUMBER(9),
  MIN_FREQ_MHZ    NUMBER(22,8),
  MAX_FREQ_MHZ    NUMBER(22,8),
  STANDARD_STATS  BLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE DRIVE_TESTS_POINTS
(
  ID             NUMBER(15),
  DRIVE_TEST_ID  NUMBER(15),
  POINTS_ARRAY   BLOB,
  POINTS_COUNT   NUMBER(9)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE DRIVE_TESTS
(
  ID            NUMBER(15),
  RESULT_ID     NUMBER(15),
  GSID          NVARCHAR2(50),
  FREQ_MHZ      NUMBER(22,8),
  STANDARD      NVARCHAR2(50),
  POINTS_COUNT  NUMBER(9)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE DRIVE_ROUTES
(
  ID         NUMBER(15),
  RESULT_ID  NUMBER(15),
  LON        NUMBER(22,8),
  LAT        NUMBER(22,8),
  ALT        NUMBER(22,8)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SM_MEAS_RESULTS
(
  ID            NUMBER(15),
  STATUS_CODE   NUMBER(3),
  STATUS_NAME   NVARCHAR2(150),
  STATUS_NOTE   NCLOB,
  CREATED_DATE  TIMESTAMP(7) WITH TIME ZONE     DEFAULT CURRENT_TIMESTAMP AT TIME ZONE 'GMT',
  SENSOR_NAME   NVARCHAR2(150),
  SENSOR_TITLE  NVARCHAR2(250),
  MEAS_TIME     DATE
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX MEAS_RESULTS_STATS_PK ON SM_MEAS_RESULTS_STATS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DRIVE_TESTS_POINTS_PK ON DRIVE_TESTS_POINTS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MAP_SECTORS_PK ON DRIVE_TESTS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX DRIVE_ROUTES_PK ON DRIVE_ROUTES
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MEAS_RESULTS_PK ON SM_MEAS_RESULTS
(ID)
LOGGING
NOPARALLEL;


CREATE OR REPLACE FUNCTION         GetID (inttable_name IN varchar2)
return number
is
n number(15);


BEGIN


if inttable_name ='DRIVE_ROUTES' then
select SDRNSVR.DRIVE_ROUTES_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='DRIVE_TESTS' then
select SDRNSVR.DRIVE_TESTS_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='DRIVE_TESTS_POINTS' then
select SDRNSVR.DRIVE_TESTS_POINTS_ID_SEQ.nextval
into n
from dual;
end if;



if inttable_name ='SM_MEAS_RESULTS' then
select SDRNSVR.SM_MEAS_RESULTS_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='SM_MEAS_RESULTS_STATS' then
select SDRNSVR.SM_MEAS_RESULTS_STATS_ID_SEQ.nextval
into n
from dual;
end if;

return(n);
end;
/

SHOW ERRORS;



--
-- Create Schema Script 
--   Database Version   : 12.2.0.1.0 
--   TOAD Version       : 9.7.2.5 
--   DB Connect String  : ICSMV41 
--   Schema             : STATIONS 
--   Script Created by  : ICSC 
--   Script Created at  : 11.08.2020 07:56:42 
--   Physical Location  :  
--   Notes              :  
--

-- Object Counts: 
--   Users: 1           Sys Privs: 15        
-- 
--   Functions: 1       Lines of Code: 20 
--   Indexes: 1         Columns: 3          
--   Sequences: 1 
--   Tables: 1          Columns: 5          


CREATE USER STATIONS
  IDENTIFIED BY STATIONS
  DEFAULT TABLESPACE USERS
  TEMPORARY TABLESPACE TEMP
  PROFILE DEFAULT
  ACCOUNT UNLOCK;
  -- 15 System Privileges for STATIONS 
  GRANT CREATE VIEW TO STATIONS;
  GRANT DROP ANY PROCEDURE TO STATIONS;
  GRANT CREATE SEQUENCE TO STATIONS;
  GRANT ALTER ANY TABLE TO STATIONS;
  GRANT CREATE SESSION TO STATIONS;
  GRANT DROP ANY TRIGGER TO STATIONS;
  GRANT DROP ANY VIEW TO STATIONS;
  GRANT DELETE ANY TABLE TO STATIONS;
  GRANT UNLIMITED TABLESPACE TO STATIONS;
  GRANT CREATE TABLE TO STATIONS;
  GRANT ALTER ANY PROCEDURE TO STATIONS;
  GRANT CREATE PROCEDURE TO STATIONS;
  GRANT ALTER ANY TRIGGER TO STATIONS;
  GRANT CREATE TRIGGER TO STATIONS;
  GRANT DROP ANY TABLE TO STATIONS;


CREATE SEQUENCE GLOBAL_IDENTITIES_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE TABLE GLOBAL_IDENTITIES
(
  REGION_CODE   NVARCHAR2(50),
  LICENSE_GSID  NVARCHAR2(50),
  STANDARD      NVARCHAR2(50),
  CREATED_DATE  TIMESTAMP(7) WITH TIME ZONE,
  REAL_GSID     NVARCHAR2(50)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX PK_GLOBAL_IDENTITIES_ ON GLOBAL_IDENTITIES
(REGION_CODE, LICENSE_GSID, STANDARD)
LOGGING
NOPARALLEL;


CREATE OR REPLACE FUNCTION          GetID (inttable_name IN varchar2)
return number
is
n number(15);


BEGIN


if inttable_name ='GLOBAL_IDENTITIES' then
select STATIONS.GLOBAL_IDENTITIES_ID_SEQ.nextval
into n
from dual;
end if;




return(n);
end;
/

SHOW ERRORS;



