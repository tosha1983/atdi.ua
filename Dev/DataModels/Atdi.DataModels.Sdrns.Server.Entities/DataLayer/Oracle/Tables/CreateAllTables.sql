CREATE SEQUENCE AMQP_EVENTS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE AMQP_MESSAGES_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE ANTENNA_PATTERN_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE AREA_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE AREA_LOCATION_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE BEARING_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE EMITTING_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE ENTITY_PART_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE ENTITY_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE FREQ_SAMPLE_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE HEAD_REF_SPECTRUM_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE LINK_AGGREGATION_SENSOR_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE LINK_AREA_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE LINK_HEAD_REF_SPECTRUM_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE LINK_MEAS_STATION_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE LINK_ONLINE_MEAS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE LINK_PROTOCOLS_WITH_EMITTINGS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE LINK_RES_SENSOR_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE LINK_SECTOR_FREQ_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE LINK_SECTOR_MASK_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE LINK_SENSORS_WITH_SYNCHRO_PROC_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE LINK_SUBTASK_MASTER_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE MEAS_DT_PARAM_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE MEAS_FREQ_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE MEAS_FREQ_PARAM_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE MEAS_LOCATION_PARAM_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE MEAS_OTHER_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE MEAS_TASK_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE MEAS_TASK_SIGNAL_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE ONLINE_MEAS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE OWNER_DATA_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE PROTOCOLS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE REFERENCE_LEVELS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE REFERENCE_SIGNAL_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE REFERENCE_SITUATION_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE REF_SPECTRUM_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE RES_LEVELS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE RES_LEV_MEAS_ONLINE_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE RES_LOCATION_SENSOR_MEAS_I_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE RES_MEAS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE RES_MEAS_SIGNALING_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE RES_MEAS_STATION_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE RES_ROUTES_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE RES_STGENERAL_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE RES_STLEVEL_CAR_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE RES_STMASKELM_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE RES_SYS_INFO_BLOCKS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE RES_SYS_INFO_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SECTOR_FREQ_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SECTOR_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SECTOR_MASK_ELEM_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SENSOR_ANTENNA_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SENSOR_EQUIP_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SENSOR_EQUIP_SENSITIVITES__SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SENSOR_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SENSOR_LOCATION_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SENSOR_POLIG_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SIGN_SYSINFO_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SIGN_SYSINFO_WTIMES_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SPECTRUM_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE STATION_EXTENDED_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE STATION_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE STATION_SITE_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SUBTASK_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SUBTASK_SENSOR_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE SYNCHRO_PROCESS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE VALIDATION_LOGS_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE SEQUENCE WORK_TIME_ID_SEQ
  START WITH 1
  MAXVALUE 9999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  CACHE 2
  NOORDER;


CREATE TABLE LINK_ONLINE_MEAS
(
  ID                     NUMBER(15)             NOT NULL,
  ONLINE_MEAS_ID         NUMBER(15)             NOT NULL,
  ONLINE_MEAS_MASTER_ID  NUMBER(15)             NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE RES_MEAS_SIGNALING
(
  ID           NUMBER(15)                       NOT NULL,
  ISSEND       NUMBER(1),
  RES_MEAS_ID  NUMBER(15)                       NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE LINK_SUBTASK_SENSOR_MASTER
(
  ID                        NUMBER(15)          NOT NULL,
  SUBTASK_SENSOR_ID         NUMBER(15),
  SUBTASK_SENSOR_MASTER_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE RES_STMASKELM
(
  ID                NUMBER(15)                  NOT NULL,
  RES_STGENERAL_ID  NUMBER(15),
  BW                NUMBER(30,10),
  "LEVEL"           NUMBER(30,10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE MEAS_LOCATION_PARAM
(
  ID            NUMBER(15)                      NOT NULL,
  LON           NUMBER(30,10),
  LAT           NUMBER(30,10),
  ASL           NUMBER(30,10),
  MAXDIST       NUMBER(30,10),
  MEAS_TASK_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE ENTITY_PART
(
  ENTITY_ID   NVARCHAR2(250)                    NOT NULL,
  PART_INDEX  NUMBER(9)                         NOT NULL,
  EOF         NUMBER(1),
  CONTENT     BLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE STATION
(
  ID                      NUMBER(15)            NOT NULL,
  GLOBAL_SID              NVARCHAR2(50),
  STATUS                  NVARCHAR2(50),
  STANDARD                NVARCHAR2(50),
  MEAS_TASK_ID            NUMBER(15),
  CLIENT_STATION_CODE     NUMBER(15),
  START_DATE              DATE,
  END_DATE                DATE,
  CLOSE_DATE              DATE,
  DOZVIL_NAME             NVARCHAR2(100),
  OWNER_DATA_ID           NUMBER(15),
  STATION_SITE_ID         NUMBER(15),
  CLIENT_PERMISSION_CODE  NUMBER(9)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE OWNER_DATA
(
  ID          NUMBER(15)                        NOT NULL,
  OWNER_NAME  NVARCHAR2(100),
  OKPO        NVARCHAR2(50),
  ZIP         NVARCHAR2(50),
  CODE        NVARCHAR2(50),
  ADDRES      NVARCHAR2(2000),
  STATION_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SECTOR_FREQ
(
  ID                NUMBER(15)                  NOT NULL,
  CLIENT_PLAN_CODE  NUMBER(15),
  CHANNAL_NUMBER    NUMBER(15),
  FREQUENCY         NUMBER(22,8),
  CLIENT_FREQ_CODE  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE LINK_MEAS_STATION
(
  ID            NUMBER(15)                      NOT NULL,
  MEAS_TASK_ID  NUMBER(15),
  STATION_ID    NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SECTOR_MASK_ELEM
(
  ID       NUMBER(15)                           NOT NULL,
  "LEVEL"  NUMBER(30,10),
  BW       NUMBER(30,10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SECTOR
(
  ID                  NUMBER(15)                NOT NULL,
  AGL                 NUMBER(30,10),
  EIRP                NUMBER(30,10),
  AZIMUTH             NUMBER(30,10),
  BW                  NUMBER(30,10),
  CLASS_EMISSION      NVARCHAR2(50),
  STATION_ID          NUMBER(15),
  CLIENT_SECTOR_CODE  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE LINK_SECTOR_MASK
(
  ID                   NUMBER(15)               NOT NULL,
  SECTOR_MASK_ELEM_ID  NUMBER(15),
  SECTOR_ID            NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE LINK_SECTOR_FREQ
(
  ID              NUMBER(15)                    NOT NULL,
  SECTOR_FREQ_ID  NUMBER(15),
  SECTOR_ID       NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE STATION_SITE
(
  ID      NUMBER(15)                            NOT NULL,
  LON     NUMBER(30,10),
  LAT     NUMBER(30,10),
  ADDRES  NVARCHAR2(2000),
  REGION  NVARCHAR2(50)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE ENTITY
(
  ID             NVARCHAR2(250)                 NOT NULL,
  NAME           NVARCHAR2(250),
  PARENT_ID      NVARCHAR2(250),
  PARENT_TYPE    NVARCHAR2(250),
  CONTENT_TYPE   NVARCHAR2(250),
  HASH_ALGORITM  NVARCHAR2(250),
  HASH_CODE      VARCHAR2(4000 CHAR),
  DESCRIPTION    VARCHAR2(4000 CHAR)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE FREQ_SAMPLE
(
  ID             NUMBER(15)                     NOT NULL,
  FREQ_MHZ       NUMBER(30,10),
  LEVEL_DBM      NUMBER(30,10),
  LEVEL_DBMKVM   NUMBER(30,10),
  LEVEL_MIN_DBM  NUMBER(30,10),
  LEVEL_MAX_DBM  NUMBER(30,10),
  OCCUPATION_PT  NUMBER(30,10),
  RES_MEAS_ID    NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE BEARING
(
  ID                    NUMBER(15)              NOT NULL,
  RES_MEAS_STATION_ID   NUMBER(15),
  LEVEL_DBM             NUMBER(30,10),
  LEVEL_DBMKVM          NUMBER(30,10),
  TIME_OF_MEASUREMENTS  DATE,
  BW                    NUMBER(30,10),
  QUALITY               NUMBER(30,10),
  CENTRAL_FREQUENCY     NUMBER(30,10),
  BEARING               NUMBER(30,10),
  AZIMUTH               NUMBER(30,10),
  ASL                   NUMBER(30,10),
  LON                   NUMBER(30,10),
  LAT                   NUMBER(30,10),
  AGL                   NUMBER(30,10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE RES_LEV_MEAS_ONLINE
(
  ID           NUMBER(15)                       NOT NULL,
  VALUE        NUMBER(30,10),
  RES_MEAS_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SIGN_SYSINFO
(
  ID              NUMBER(15)                    NOT NULL,
  BANDWIDTH_HZ    NUMBER(30,10),
  FREQ_HZ         NUMBER(22,8)                  NOT NULL,
  LEVEL_DBM       NUMBER(30,10),
  CID             NUMBER(9),
  MCC             NUMBER(9),
  MNC             NUMBER(9),
  BSIC            NUMBER(9),
  CHANNEL_NUMBER  NUMBER(9),
  LAC             NUMBER(9),
  RNC             NUMBER(9),
  CTOI            NUMBER(30,10),
  POWER           NUMBER(30,10),
  EMITTING_ID     NUMBER(15),
  STANDARD        VARCHAR2(20 CHAR)             NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SIGN_SYSINFO_WTIMES
(
  ID                 NUMBER(15)                 NOT NULL,
  START_EMIT         DATE                       NOT NULL,
  STOP_EMIT          DATE                       NOT NULL,
  HIT_COUNT          NUMBER(9)                  NOT NULL,
  PERCENT_AVAILABLE  NUMBER(22,8)               NOT NULL,
  SYSINFO_ID         NUMBER(15)                 NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE RES_LOCATION_SENSOR_MEAS
(
  ID           NUMBER(15)                       NOT NULL,
  LON          NUMBER(30,10),
  LAT          NUMBER(30,10),
  ASL          NUMBER(30,10),
  RES_MEAS_ID  NUMBER(15),
  AGL          NUMBER(30,10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE VALIDATION_LOGS
(
  ID           NUMBER(15)                       NOT NULL,
  TABLE_NAME   NVARCHAR2(150),
  WHEN         DATE,
  MESSAGE_ID   NUMBER(15),
  RES_MEAS_ID  NUMBER(15),
  INFO         NCLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE AMQP_MESSAGES
(
  ID                     NUMBER(15)             NOT NULL,
  STATUS_CODE            NUMBER(3)              NOT NULL,
  CREATED_DATE           TIMESTAMP(7) WITH TIME ZONE NOT NULL,
  THREAD_ID              NUMBER(15)             NOT NULL,
  PROCESSED_SDATE        TIMESTAMP(7) WITH TIME ZONE,
  PROCESSED_FDATE        TIMESTAMP(7) WITH TIME ZONE,
  PROP_EXCHANGE          NVARCHAR2(250),
  PROP_ROUTING_KEY       NVARCHAR2(250),
  PROP_DELIVERY_TAG      NVARCHAR2(250),
  PROP_CONSUMER_TAG      NVARCHAR2(250),
  PROP_APP_ID            NVARCHAR2(250),
  PROP_TYPE              NVARCHAR2(250),
  PROP_TIMESTAMP         NVARCHAR2(50),
  PROP_MESSAGE_ID        NVARCHAR2(250),
  PROP_CORRELATION_ID    NVARCHAR2(250),
  PROP_CONTENT_ENCODING  NVARCHAR2(250),
  PROP_CONTENT_TYPE      NVARCHAR2(250),
  HEADER_CREATED         NVARCHAR2(250),
  HEADER_SDRNSERVER      NVARCHAR2(250),
  HEADER_SENSORNAME      NVARCHAR2(250),
  HEADER_SENSORTECHID    NVARCHAR2(250),
  BODY_CONTENT_TYPE      NVARCHAR2(250),
  BODY_CONTENT_ENCODING  NVARCHAR2(250),
  BODY_CONTENT           BLOB,
  STATUS_NOTE            NCLOB,
  STATUS_NAME            NVARCHAR2(50),
  HEADER_APIVERSION      NVARCHAR2(50),
  HEADER_PROTOCOL        NVARCHAR2(50),
  HEADER_BODYAQNAME      NVARCHAR2(250)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE LINK_RES_SENSOR
(
  ID                   NUMBER(15)               NOT NULL,
  SENSOR_ID            NUMBER(15),
  RES_MEAS_STATION_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE LINK_AGGREGATION_SENSOR
(
  ID                    NUMBER(15)              NOT NULL,
  SENSOR_ID             NUMBER(15),
  AGGR_SERVER_INSTANCE  VARCHAR2(150 BYTE),
  AGGR_SENSOR_ID        NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE MEAS_OTHER
(
  ID                        NUMBER(15)          NOT NULL,
  TYPE_SPECTRUM_OCCUPATION  NVARCHAR2(50),
  LEVEL_MIN_OCCUP           NUMBER(30,10),
  NCHENAL                   NUMBER(9),
  MEAS_TASK_ID              NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE WORK_TIME
(
  ID                 NUMBER(15)                 NOT NULL,
  START_EMIT         DATE                       NOT NULL,
  STOP_EMIT          DATE                       NOT NULL,
  HIT_COUNT          NUMBER(9)                  NOT NULL,
  PERCENT_AVAILABLE  NUMBER(22,8)               NOT NULL,
  EMITTING_ID        NUMBER(15)                 NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE RES_SYS_INFO_BLOCKS
(
  ID               NUMBER(15)                   NOT NULL,
  TYPE             NVARCHAR2(50),
  RES_SYS_INFO_ID  NUMBER(15),
  DATA             BLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE REFERENCE_SITUATION
(
  ID            NUMBER(15)                      NOT NULL,
  SENSOR_ID     NUMBER(15),
  MEAS_TASK_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE MEAS_DT_PARAM
(
  ID                NUMBER(15)                  NOT NULL,
  DETECT_TYPE       NVARCHAR2(50),
  RF_ATTENUATION    NUMBER(30,10),
  IF_ATTENUATION    NUMBER(30,10),
  MEAS_TIME         NUMBER(30,10),
  DEMOD             NVARCHAR2(50),
  PREAMPLIFICATION  NUMBER(9),
  "MODE"            NVARCHAR2(50),
  RBW               NUMBER(30,10),
  VBW               NUMBER(30,10),
  MEAS_TASK_ID      NUMBER(15),
  SW_NUMBER         NUMBER(9),
  REF_LEVEL         NUMBER(30,10),
  NUM_TOTAL_SCAN    NUMBER(9)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SYNCHRO_PROCESS
(
  ID                              NUMBER(15)    NOT NULL,
  CREATED_BY                      NVARCHAR2(50),
  CREATED_DATE                    DATE,
  STATUS                          NVARCHAR2(20),
  DATE_START                      DATE,
  DATE_END                        DATE,
  COUNT_RECORDS_IMPORTED          NUMBER(9),
  COUNT_RECORDS_OUT               NUMBER(9),
  COUNT_RECORDS_OUT_WITHOUT_EMIT  NUMBER(9)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE LINK_HEAD_REF_SPECTRUM
(
  ID                    NUMBER(15)              NOT NULL,
  HEAD_REF_SPECTRUM_ID  NUMBER(15),
  SYNCHRO_PROCESS_ID    NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE RES_MEAS_STATION
(
  ID                   NUMBER(15)               NOT NULL,
  GLOBAL_SID           NVARCHAR2(250),
  MEAS_GLOBAL_SID      NVARCHAR2(250),
  FREQUENCY            NUMBER(22,8)             NOT NULL,
  STATUS               NVARCHAR2(250),
  RES_MEAS_ID          NUMBER(15)               NOT NULL,
  STANDARD             NVARCHAR2(50),
  CLIENT_SECTOR_CODE   NUMBER(9),
  CLIENT_STATION_CODE  NUMBER(9)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE RES_MEAS
(
  ID                   NUMBER(15)               NOT NULL,
  SUBTASK_SENSOR_ID    NUMBER(15),
  ANTVAL               NUMBER(30,10),
  TIME_MEAS            DATE,
  DATA_RANK            NUMBER(9),
  N                    NUMBER(9),
  STATUS               NVARCHAR2(50),
  TYPE_MEASUREMENTS    NVARCHAR2(50),
  MEAS_SDR_RESULT_SID  NVARCHAR2(450),
  SYNCHRONIZED         NUMBER(1)                DEFAULT 0,
  START_TIME           DATE,
  STOP_TIME            DATE,
  SCANS_NUMBER         NUMBER(10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SENSOR
(
  ID                   NUMBER(15)               NOT NULL,
  SENSORIDENTIFIER_ID  NUMBER(15),
  STATUS               NVARCHAR2(50),
  NAME                 NVARCHAR2(150),
  ADMINISTRATION       NVARCHAR2(50),
  NETWORKID            NVARCHAR2(150),
  REMARK               NVARCHAR2(250),
  BIUSEDATE            DATE,
  EOUSEDATE            DATE,
  AZIMUTH              NUMBER(30,10),
  ELEVATION            NUMBER(30,10),
  AGL                  NUMBER(30,10),
  IDSYSARGUS           NVARCHAR2(50),
  TYPESENSOR           NVARCHAR2(50),
  STEPMEASTIME         NUMBER(30,10),
  RXLOSS               NUMBER(30,10),
  OPHHFR               NUMBER(30,10),
  OPHHTO               NUMBER(30,10),
  OPDAYS               NVARCHAR2(50),
  CUSTTXT1             NVARCHAR2(50),
  CUSTDATA1            DATE,
  CUSTNBR1             NUMBER(30,10),
  DATECREATED          DATE,
  CREATEDBY            VARCHAR2(50 BYTE),
  APIVERSION           VARCHAR2(10 BYTE)        DEFAULT 'v1.0',
  TECHID               VARCHAR2(150 BYTE),
  LASTACTIVITY         DATE,
  TITLE                NVARCHAR2(250)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE RES_STLEVEL_CAR
(
  ID                    NUMBER(15)              NOT NULL,
  RES_MEAS_STATION_ID   NUMBER(15),
  ALTITUDE              NUMBER(30,10),
  DIFFERENCE_TIMESTAMP  NUMBER(30,10),
  LAT                   NUMBER(30,10),
  LON                   NUMBER(30,10),
  LEVEL_DBM             NUMBER(30,10),
  LEVEL_DBMKVM          NUMBER(30,10),
  TIME_OF_MEASUREMENTS  DATE,
  AGL                   NUMBER(30,10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SENSOR_POLIG
(
  ID         NUMBER(15)                         NOT NULL,
  SENSOR_ID  NUMBER(15),
  LON        NUMBER(30,10),
  LAT        NUMBER(30,10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE ONLINE_MEAS
(
  ID              NUMBER(15)                    NOT NULL,
  CREATED_DATE    TIMESTAMP(7) WITH TIME ZONE   NOT NULL,
  SRV_TOKEN       RAW(16)                       NOT NULL,
  STATUS_CODE     NUMBER(3)                     NOT NULL,
  STATUS_NOTE     NCLOB,
  SENSOR_ID       NUMBER(15)                    NOT NULL,
  PERIOD_MINUTES  NUMBER(9)                     NOT NULL,
  START_TIME      TIMESTAMP(7) WITH TIME ZONE,
  FINISH_TIME     TIMESTAMP(7) WITH TIME ZONE,
  SNR_TOKEN       BLOB,
  WEBSOCKET_URL   NCLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE RES_ROUTES
(
  ID               NUMBER(15)                   NOT NULL,
  ROUTE_ID         NVARCHAR2(250),
  AGL              NUMBER(30,10),
  ASL              NUMBER(30,10),
  FINISH_TIME      DATE                         NOT NULL,
  LAT              NUMBER(30,10),
  LON              NUMBER(30,10),
  POINT_STAY_TYPE  NVARCHAR2(150),
  START_TIME       DATE,
  RES_MEAS_ID      NUMBER(15)                   NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE HEAD_REF_SPECTRUM
(
  ID                    NUMBER(15)              NOT NULL,
  FILE_NAME             NVARCHAR2(250),
  CREATED_DATE          DATE,
  CREATED_BY            NVARCHAR2(50),
  COUNT_IMPORT_RECORDS  NUMBER(9),
  MIN_FREQ_MHZ          NUMBER(30,10),
  MAX_FREQ_MHZ          NUMBER(30,10),
  COUNT_SENSORS         NUMBER(9)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE STATION_EXTENDED
(
  ID                 NUMBER(15)                 NOT NULL,
  TABLE_NAME         NVARCHAR2(50),
  TABLE_ID           NUMBER(9),
  STANDARD           NVARCHAR2(150),
  STANDARD_NAME      NVARCHAR2(150),
  OWNER_NAME         NVARCHAR2(100),
  PERMISSION_NUMBER  NVARCHAR2(100),
  PERMISSION_START   DATE,
  PERMISSION_STOP    DATE,
  ADDRESS            NVARCHAR2(1000),
  LONGITUDE          NUMBER(30,10),
  LATITUDE           NUMBER(30,10),
  BW                 NUMBER(30,10),
  DESIG_EMISSION     NVARCHAR2(25),
  PROVINCE           NVARCHAR2(100)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SENSOR_LOCATION
(
  ID            NUMBER(15)                      NOT NULL,
  SENSOR_ID     NUMBER(15),
  DATA_FROM     DATE,
  DATA_TO       DATE,
  DATA_CREATED  DATE,
  STATUS        NVARCHAR2(50),
  LON           NUMBER(30,10),
  LAT           NUMBER(30,10),
  ASL           NUMBER(30,10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE RES_LEVELS
(
  ID               NUMBER(15)                   NOT NULL,
  VALUE_LVL        NUMBER(22,8),
  STDDEV_LVL       NUMBER(30,10),
  VMIN_LVL         NUMBER(22,8),
  VMMAX_LVL        NUMBER(22,8),
  LIMIT_LVL        NUMBER(30,10),
  OCCUPANCY_LVL    NUMBER(30,10),
  PMIN_LVL         NUMBER(30,10),
  PMAX_LVL         NUMBER(30,10),
  PDIFF_LVL        NUMBER(30,10),
  FREQ_MEAS        NUMBER(22,8),
  VALUE_SPECT      NUMBER(22,8),
  STDDEV_SPECT     NUMBER(30,10),
  VMIN_SPECT       NUMBER(30,10),
  VMMAX_SPECT      NUMBER(30,10),
  LIMIT_SPECT      NUMBER(30,10),
  OCCUPANCY_SPECT  NUMBER(22,8),
  RES_MEAS_ID      NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE RES_STGENERAL
(
  ID                      NUMBER(15)            NOT NULL,
  RES_MEAS_STATION_ID     NUMBER(15),
  CENTRAL_FREQUENCY       NUMBER(30,10),
  CENTRAL_FREQUENCY_MEAS  NUMBER(30,10),
  DURATION_MEAS           NUMBER(30,10),
  MARKER_INDEX            NUMBER(9),
  T1                      NUMBER(9),
  T2                      NUMBER(9),
  TIME_FINISH_MEAS        DATE,
  TIME_START_MEAS         DATE,
  OFFSET_FREQUENCY        NUMBER(30,10),
  SPECRUM_START_FREQ      NUMBER(22,8),
  SPECRUM_STEPS           NUMBER(22,8),
  CORRECTNESS_ESTIM       NUMBER(1),
  TRACE_COUNT             NUMBER(9),
  VBW                     NUMBER(30,10),
  RBW                     NUMBER(30,10),
  BW                      NUMBER(30,10),
  LEVEL_SSPECTRUM_DBM     BLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE RES_SYS_INFO
(
  ID                NUMBER(15)                  NOT NULL,
  BANDWIDTH         NUMBER(30,10),
  BASEID            NUMBER(9),
  BSIC              NUMBER(9),
  CHANNELNUMBER     NUMBER(9),
  CID               NUMBER(9),
  CODE              NUMBER(30,10),
  CTOI              NUMBER(22,8),
  ECI               NUMBER(9),
  ENODEBID          NUMBER(9),
  FREQ              NUMBER(30,10),
  ICIO              NUMBER(30,10),
  INBAND_POWER      NUMBER(30,10),
  ISCP              NUMBER(30,10),
  LAC               NUMBER(9),
  AGL               NUMBER(30,10),
  ASL               NUMBER(30,10),
  LAT               NUMBER(30,10),
  LON               NUMBER(30,10),
  MCC               NUMBER(9),
  MNC               NUMBER(9),
  NID               NUMBER(9),
  PCI               NUMBER(9),
  PN                NUMBER(9),
  POWER             NUMBER(30,10),
  PTOTAL            NUMBER(30,10),
  RNC               NUMBER(9),
  RSCP              NUMBER(30,10),
  RSRP              NUMBER(30,10),
  RSRQ              NUMBER(30,10),
  SC                NUMBER(9),
  SID               NUMBER(9),
  TAC               NUMBER(9),
  TYPECDMAEVDO      VARCHAR2(250 BYTE),
  UCID              NUMBER(9),
  RES_STGENERAL_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE AREA
(
  ID            NUMBER(15)                      NOT NULL,
  NAME          NVARCHAR2(250),
  TYPE_OF_AREA  NVARCHAR2(25),
  CREATED_BY    NVARCHAR2(50),
  CREATED_DATE  DATE,
  AREA_ID_ICSM  NUMBER(9)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE LINK_PROTOCOLS_WITH_EMITTINGS
(
  ID                         NUMBER(15)         NOT NULL,
  PROBABILITY                NUMBER(30,10),
  STARTFREQ_MHZ              NUMBER(30,10),
  STOPFREQ_MHZ               NUMBER(30,10),
  CURRPOWER_DBM              NUMBER(30,10),
  REFLEVEL_DBM               NUMBER(30,10),
  MEANDEVFROM_REF            NUMBER(30,10),
  TRIGGERDEVFROM_REF         NUMBER(30,10),
  ROLL_OFF_ACTOR             NUMBER(30,10),
  STANDARD_BW                NUMBER(30,10),
  LEVELS_DISTRIBUTION_LVL    BLOB,
  LEVELS_DISTRIBUTION_COUNT  BLOB,
  LOSS_DB                    BLOB,
  FREQ_KHZ                   BLOB,
  SPECTRUM_STARTFREQ_MHZ     NUMBER(30,10),
  SPECTRUM_STEPFREQ_KHZ      NUMBER(30,10),
  T1                         NUMBER(9),
  T2                         NUMBER(9),
  MARKER_INDEX               NUMBER(9),
  BW_KHZ                     NUMBER(30,10),
  CORRECT_ESTIM              NUMBER(9),
  TRACE_COUNT                NUMBER(9),
  SIGNALLEVEL_DBM            NUMBER(22,8),
  LEVELS_DBM                 BLOB,
  CONTRAVENTION              NUMBER(9),
  WORK_TIME_START            DATE,
  WORK_TIME_STOP             DATE,
  PROTOCOLS_ID               NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE MEAS_FREQ
(
  ID                  NUMBER(15)                NOT NULL,
  FREQ                NUMBER(30,10),
  MEAS_FREQ_PARAM_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE PROTOCOLS
(
  ID                   NUMBER(15)               NOT NULL,
  PERMISSION_NUMBER    NVARCHAR2(200),
  PERMISSION_START     DATE,
  PERMISSION_STOP      DATE,
  GLOBAL_SID           NVARCHAR2(50),
  FREQ_MHZ             NUMBER(30,10),
  LEVEL_DBM            NUMBER(30,10),
  DATE_MEAS            DATE,
  DISPERSION_LOW       NUMBER(30,10),
  DISPERSION_UP        NUMBER(30,10),
  PERCENT              NUMBER(30,10),
  SENSOR_LON           NUMBER(30,10),
  SENSOR_LAT           NUMBER(30,10),
  SENSOR_NAME          NVARCHAR2(100),
  SENSOR_ID			   NUMBER(15),
  STATION_EXTENDED_ID  NUMBER(15),
  SYNCHRO_PROCESS_ID   NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE EMITTING
(
  ID                         NUMBER(15)         NOT NULL,
  STARTFREQ_MHZ              NUMBER(30,10),
  STOPFREQ_MHZ               NUMBER(30,10),
  CURRPOWER_DBM              NUMBER(30,10),
  REFLEVEL_DBM               NUMBER(30,10),
  MEANDEVFROM_REF            NUMBER(30,10),
  TRIGGERDEVFROM_REF         NUMBER(30,10),
  ROLL_OFF_ACTOR             NUMBER(30,10),
  STANDARD_BW                NUMBER(30,10),
  RES_MEAS_ID                NUMBER(15),
  SENSOR_ID                  NUMBER(15),
  STATION_ID                 NUMBER(15),
  STATION_TABLE_NAME         NVARCHAR2(50),
  LEVELS_DISTRIBUTION_LVL    BLOB,
  LEVELS_DISTRIBUTION_COUNT  BLOB,
  LOSS_DB                    BLOB,
  FREQ_KHZ                   BLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE MEAS_FREQ_PARAM
(
  ID            NUMBER(15)                      NOT NULL,
  "MODE"        NVARCHAR2(50),
  RGL           NUMBER(30,10),
  RGU           NUMBER(30,10),
  STEP          NUMBER(30,10),
  MEAS_TASK_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SUBTASK
(
  ID            NUMBER(15)                      NOT NULL,
  TIME_START    DATE,
  TIME_STOP     DATE,
  STATUS        NVARCHAR2(50),
  INTERVAL      NUMBER(9),
  MEAS_TASK_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE AMQP_EVENTS
(
  ID            NUMBER(15)                      NOT NULL,
  PROP_TYPE     VARCHAR2(250 CHAR),
  CREATED_DATE  TIMESTAMP(7) WITH TIME ZONE
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE REFERENCE_LEVELS
(
  ID            NUMBER(15)                      NOT NULL,
  STARTFREQ_HZ  NUMBER(30,10),
  STEPFREQ_HZ   NUMBER(30,10),
  RES_MEAS_ID   NUMBER(15),
  REF_LEVELS    BLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SENSOR_EQUIP_SENSITIVITES
(
  ID               NUMBER(15)                   NOT NULL,
  SENSOR_EQUIP_ID  NUMBER(15),
  FREQ             NUMBER(30,10),
  KTBF             NUMBER(30,10),
  NOISEF           NUMBER(30,10),
  FREQ_STABILITY   NUMBER(30,10),
  ADDLOSS          NUMBER(30,10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE LINK_AREA
(
  ID                  NUMBER(15)                NOT NULL,
  AREA_ID             NUMBER(15),
  SYNCHRO_PROCESS_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SUBTASK_SENSOR
(
  ID              NUMBER(15)                    NOT NULL,
  STATUS          NVARCHAR2(50),
  COUNT           NUMBER(9),
  TIME_NEXT_TASK  DATE,
  SENSOR_ID       NUMBER(15),
  SUBTASK_ID      NUMBER(15)                    NOT NULL
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE MEAS_TASK
(
  ID              NUMBER(15)                    NOT NULL,
  STATUS          NVARCHAR2(50),
  ORDER_ID        NUMBER(9),
  TYPE            NVARCHAR2(50),
  NAME            NVARCHAR2(100),
  EXECUTION_MODE  NVARCHAR2(50),
  TASK            NVARCHAR2(50),
  PRIO            NUMBER(9),
  RESULT_TYPE     NVARCHAR2(50),
  MAX_TIME_BS     NUMBER(9),
  DATE_CREATED    DATE,
  CREATED_BY      NVARCHAR2(50),
  IDENT_START     NVARCHAR2(50),
  PER_START       DATE,
  PER_STOP        DATE,
  TIME_START      DATE,
  TIME_STOP       DATE,
  DAYS            NVARCHAR2(250),
  PER_INTERVAL    NUMBER(30,10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE REF_SPECTRUM
(
  ID                    NUMBER(15)              NOT NULL,
  ID_NUM                NUMBER(9),
  TABLE_NAME            NVARCHAR2(50),
  TABLE_ID              NUMBER(9),
  SENSOR_ID             NUMBER(15),
  GLOBAL_SID            NVARCHAR2(50),
  FREQ_MHZ              NUMBER(30,10),
  LEVEL_DBM             NUMBER(30,10),
  DISPERSION_LOW        NUMBER(30,10),
  DISPERSION_UP         NUMBER(30,10),
  PERCENT               NUMBER(30,10),
  DATE_MEAS             DATE,
  HEAD_REF_SPECTRUM_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE ANTENNA_PATTERN
(
  ID                 NUMBER(15)                 NOT NULL,
  SENSOR_ANTENNA_ID  NUMBER(15),
  FREQ               NUMBER(30,10),
  GAIN               NUMBER(30,10),
  DIAGA              NVARCHAR2(1000),
  DIAGH              NVARCHAR2(1000),
  DIAGV              NVARCHAR2(1000)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SPECTRUM
(
  ID               NUMBER(15)                   NOT NULL,
  STARTFREQ_MHZ    NUMBER(30,10),
  STEPFREQ_KHZ     NUMBER(30,10),
  T1               NUMBER(9),
  T2               NUMBER(9),
  MARKER_INDEX     NUMBER(9),
  BW_KHZ           NUMBER(30,10),
  CORRECT_ESTIM    NUMBER(1),
  TRACE_COUNT      NUMBER(9),
  SIGNALLEVEL_DBM  NUMBER(22,8),
  EMITTING_ID      NUMBER(15),
  CONTRAVENTION    NUMBER(1),
  LEVELS_DBM       BLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SENSOR_EQUIP
(
  ID              NUMBER(15)                    NOT NULL,
  SENSOR_ID       NUMBER(15),
  CODE            NVARCHAR2(50),
  MANUFACTURER    NVARCHAR2(50),
  NAME            NVARCHAR2(50),
  FAMILY          NVARCHAR2(50),
  TECHID          NVARCHAR2(200),
  VERSION         NVARCHAR2(50),
  LOWER_FREQ      NUMBER(30,10),
  UPPER_FREQ      NUMBER(30,10),
  RBW_MIN         NUMBER(30,10),
  RBW_MAX         NUMBER(30,10),
  VBW_MIN         NUMBER(30,10),
  VBW_MAX         NUMBER(30,10),
  MOBILITY        NUMBER(1),
  FFT_POINT_MAX   NUMBER(30,10),
  REF_LEVEL_DBM   NUMBER(30,10),
  OPERATION_MODE  NVARCHAR2(50),
  TYPE            NVARCHAR2(50),
  EQUIP_CLASS     NVARCHAR2(50),
  TUNING_STEP     NUMBER(30,10),
  USE_TYPE        NVARCHAR2(50),
  CATEGORY        NVARCHAR2(50),
  REMARK          NVARCHAR2(250),
  CUSTTXT1        NVARCHAR2(250),
  CUSTDATA1       DATE,
  CUSTNBR1        NUMBER(30,10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE LINK_SENSORS_WITH_SYNCHRO_PROC
(
  ID                  NUMBER(15)                NOT NULL,
  SENSOR_ID           NUMBER(15),
  SYNCHRO_PROCESS_ID  NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE REFERENCE_SIGNAL
(
  ID                      NUMBER(15)            NOT NULL,
  FREQ_MHZ                NUMBER(30,10),
  BANDWIDTH_KHZ           NUMBER(30,10),
  LEVELSIGNAL_DBM         NUMBER(30,10),
  REFERENCE_SITUATION_ID  NUMBER(15),
  ICSM_ID                 NUMBER(9),
  ICSM_TABLE              NVARCHAR2(50),
  LOSS_DB                 BLOB,
  FREQ_KHZ                BLOB
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE SENSOR_ANTENNA
(
  ID            NUMBER(15)                      NOT NULL,
  SENSOR_ID     NUMBER(15),
  CODE          NVARCHAR2(50),
  SLEWANG       NUMBER(30,10),
  MANUFACTURER  NVARCHAR2(50),
  NAME          NVARCHAR2(50),
  TECHID        NVARCHAR2(50),
  ANTDIR        NVARCHAR2(50),
  HBEAMWIDTH    NUMBER(30,10),
  VBEAMWIDTH    NUMBER(30,10),
  POLARIZATION  NVARCHAR2(50),
  USETYPE       NVARCHAR2(50),
  CATEGORY      NVARCHAR2(50),
  GAINTYPE      NVARCHAR2(50),
  GAINMAX       NUMBER(30,10),
  LOWERFREQ     NUMBER(30,10),
  UPPERFREQ     NUMBER(30,10),
  ADDLOSS       NUMBER(30,10),
  XPD           NUMBER(30,10),
  ANTCLASS      NVARCHAR2(50),
  REMARK        NVARCHAR2(250),
  CUSTTXT1      NVARCHAR2(250),
  CUSTDATA1     DATE,
  CUSTNBR1      NUMBER(30,10)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE MEAS_TASK_SIGNAL
(
  ID                              NUMBER(15)    NOT NULL,
  AUTO_DIV_EMIT                   NUMBER(1),
  COMPARE_TRACE_JUST_REF_LEVELS   NUMBER(1),
  DIFF_MAX_MAX                    NUMBER(30,10),
  FILTRATION_TRACE                NUMBER(1),
  SIGN_NCHENAL                    NUMBER(9),
  SIGN_NCOUNT                     NUMBER(9),
  ALLOW_EXCESS_DB                 NUMBER(30,10),
  MEAS_TASK_ID                    NUMBER(15),
  CORELLATION_ANALIZE             NUMBER(1),
  CHECK_FREQ_CH                   NUMBER(1),
  ANALIZE_BY_CH                   NUMBER(1),
  ANALIZE_SYSINFO_CH              NUMBER(1),
  MEAS_BW_EMISSION                NUMBER(1),
  CORRELATION_FACTOR              NUMBER(30,10),
  STANDARD                        VARCHAR2(50 BYTE),
  TRIGGER_LEVEL_DBM_HZ            NUMBER(30,10),
  NUMBER_POINT_FOR                NUMBER(30,10),
  WINDOW_BW                       NUMBER(30,10),
  DIFF_LEVEL_FOR_BW               NUMBER(30,10),
  NDBLEVEL_DB                     NUMBER(30,10),
  NUM_IGNORED_POINTS              NUMBER(9),
  MIN_EXCESS_NOSE_LVL             NUMBER(30,10),
  TIME_BETWEEN_WORKTIMES          NUMBER(9),
  TYPE_JOIN_SPECTRUM              NUMBER(9),
  CROSSING_BW_PERCENT_GOOD        NUMBER(30,10),
  CROSSING_BW_PERCENT_BAD         NUMBER(30,10),
  MAX_FREQ_DEVIATION              NUMBER(30,10),
  MIN_POINT_DETAIL_BW             NUMBER(9),
  CHECK_LEVEL_CHANNEL             NUMBER(1),
  COLLECT_EMISSION_INSTRUM_ESTIM  NUMBER(1)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE TABLE AREA_LOCATION
(
  ID         NUMBER(15)                         NOT NULL,
  LONGITUDE  NUMBER(30,10),
  LATITUDE   NUMBER(30,10),
  AREA_ID    NUMBER(15)
)
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE INDEX STATION_ID_STATION_PK ON STATION
(CLIENT_STATION_CODE)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LINK_SUBTASK_SENSOR_MASTER_PK ON LINK_SUBTASK_SENSOR_MASTER
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RES_STMASKELM_ID_PK ON RES_STMASKELM
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RES_MEAS_SIGNALING_PK ON RES_MEAS_SIGNALING
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MEAS_LOC_PARAM_ID_PK ON MEAS_LOCATION_PARAM
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX RES_STMASKELM_RESSTGEN_ID_PK ON RES_STMASKELM
(RES_STGENERAL_ID)
LOGGING
NOPARALLEL;


CREATE INDEX SECTOR_MASK_ELEM_BW_PK ON SECTOR_MASK_ELEM
(BW)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LINK_SECTOR_MASK_ID_PK ON LINK_SECTOR_MASK
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX STATION_ID_PK ON STATION
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX STATION_SITE_LAT_PK ON STATION_SITE
(LAT)
LOGGING
NOPARALLEL;


CREATE INDEX SECTOR_FREQ_ID_PLAN_PK ON SECTOR_FREQ
(CLIENT_PLAN_CODE)
LOGGING
NOPARALLEL;


CREATE INDEX STATION_MEASTASK_ID_PK ON STATION
(MEAS_TASK_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX OWNER_DATA_ID_PK ON OWNER_DATA
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SECTOR_FREQ_ID_PK ON SECTOR_FREQ
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LINK_SECTOR_FREQ_ID_PK ON LINK_SECTOR_FREQ
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX STATION_SITE_LON_PK ON STATION_SITE
(LON)
LOGGING
NOPARALLEL;


CREATE INDEX LINK_SECTOR_FREQ_SECTOR_ID_PK ON LINK_SECTOR_FREQ
(SECTOR_ID)
LOGGING
NOPARALLEL;


CREATE INDEX LINK_MEAS_STATION_STAT_ID_PK ON LINK_MEAS_STATION
(STATION_ID)
LOGGING
NOPARALLEL;


CREATE INDEX STATION_OWNERDATA_ID_PK ON STATION
(OWNER_DATA_ID)
LOGGING
NOPARALLEL;


CREATE INDEX RES_LEV_MEAS_ONLINE_PK ON RES_LEV_MEAS_ONLINE
(RES_MEAS_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RES_LEV_MEAS_ONLINE_ID_PK ON RES_LEV_MEAS_ONLINE
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX BEARING_RES_MEAS_STATION_ID_PK ON BEARING
(RES_MEAS_STATION_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX BEARING_PK ON BEARING
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX SIGN_SYSINFO_EMITTINGID_FK ON SIGN_SYSINFO
(EMITTING_ID)
LOGGING
NOPARALLEL;


CREATE INDEX SIGN_SIGNSYSINFOSID_FK ON SIGN_SYSINFO_WTIMES
(SYSINFO_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX FREQ_SAMPLE_ID_PK ON FREQ_SAMPLE
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SIGN_SYSINFO_WTIMES_PK ON SIGN_SYSINFO_WTIMES
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SIGN_SYSINFOS_PK ON SIGN_SYSINFO
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX LINK_SECTOR_MASK_PK ON LINK_SECTOR_MASK
(SECTOR_MASK_ELEM_ID)
LOGGING
NOPARALLEL;


CREATE INDEX SECTOR_FREQ_CHAN_NUM_PK ON SECTOR_FREQ
(CHANNAL_NUMBER)
LOGGING
NOPARALLEL;


CREATE INDEX LINK_SECTOR_FREQ_SEC_FREQ_PK ON LINK_SECTOR_FREQ
(SECTOR_FREQ_ID)
LOGGING
NOPARALLEL;


CREATE INDEX STATION_SITE_REGION_PK ON STATION_SITE
(REGION)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LINK_ONLINE_MEAS_PK ON LINK_ONLINE_MEAS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX ENTITY_ID_PK ON ENTITY
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SECTOR_ID_PK ON SECTOR
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LINK_MEAS_STATION_PK ON LINK_MEAS_STATION
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX ENTITY_PART_PK ON ENTITY_PART
(ENTITY_ID, PART_INDEX)
LOGGING
NOPARALLEL;


CREATE INDEX SECTOR_IDSECTOR_PK ON SECTOR
(CLIENT_SECTOR_CODE)
LOGGING
NOPARALLEL;


CREATE INDEX SECTOR_STATION_ID_PK ON SECTOR
(STATION_ID)
LOGGING
NOPARALLEL;


CREATE INDEX SECTOR_MASK_ELEM_LEVEL_PK ON SECTOR_MASK_ELEM
("LEVEL")
LOGGING
NOPARALLEL;


CREATE INDEX SECTOR_FREQ_FREQUENCY_PK ON SECTOR_FREQ
(FREQUENCY)
LOGGING
NOPARALLEL;


CREATE INDEX STATION_STATIONSITEID_PK ON STATION
(STATION_SITE_ID)
LOGGING
NOPARALLEL;


CREATE INDEX LINK_SECTOR_MASK_SECTOR_ID_PK ON LINK_SECTOR_MASK
(SECTOR_ID)
LOGGING
NOPARALLEL;


CREATE INDEX LINK_MEAS_STATION_TASK_ID_PK ON LINK_MEAS_STATION
(MEAS_TASK_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SECTOR_MASK_ELEM_ID_PK ON SECTOR_MASK_ELEM
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX STATIONSITE_ID_PK ON STATION_SITE
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX RES_MEAS_STATION_COMPOS_IDX ON RES_MEAS_STATION
(RES_MEAS_ID, FREQUENCY, MEAS_GLOBAL_SID, GLOBAL_SID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX STATION_EXTENDED_PK ON STATION_EXTENDED
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX WORKTIME_EMITTING_ID_FK ON WORK_TIME
(EMITTING_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SENSOR_EQUIP_ID_PK ON SENSOR_EQUIP
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX LINK_RES_SENSOR_PK ON LINK_RES_SENSOR
(RES_MEAS_STATION_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LINK_HEAD_REF_SPECTRUM_PK ON LINK_HEAD_REF_SPECTRUM
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RES_LOC_SENSOR_MEAS_ID_PK ON RES_LOCATION_SENSOR_MEAS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RES_STGENERAL_ID_PK ON RES_STGENERAL
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX REF_SPECTRUM_PK ON REF_SPECTRUM
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX REFERENCE_SIGNAL_PK ON REFERENCE_SIGNAL
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SPECTRUM_ID_PK ON SPECTRUM
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX MEAS_TASK_SIGNAL_TASK_ID_FK ON MEAS_TASK_SIGNAL
(MEAS_TASK_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LINK_AREA_PK ON LINK_AREA
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX AMQP_EVENTS_ID_PK ON AMQP_EVENTS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MEAS_FREQ_ID_PK ON MEAS_FREQ
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX RES_LEVELS_RES_MEAS_ID_PK ON RES_LEVELS
(RES_MEAS_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SENSOR_EQUIP_SENS_ID_PK ON SENSOR_EQUIP_SENSITIVITES
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX EMITTING_ID_PK ON EMITTING
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX REFERENCE_SITUATION_ID_PK ON REFERENCE_SITUATION
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX ONLINE_MEAS_SRV_TOKEN ON ONLINE_MEAS
(SRV_TOKEN)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX WORKTIME_ID_PK ON WORK_TIME
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MEAS_SUB_TASK_ID_PK ON SUBTASK
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MEAS_TASK_SIGNAL_ID_PK ON MEAS_TASK_SIGNAL
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LINK_RES_SENSOR_ID_PK ON LINK_RES_SENSOR
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX AREA_PK ON AREA
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX ID_XBS_SENSORKEY ON LINK_RES_SENSOR
(SENSOR_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX ONLINE_MEAS_PK ON ONLINE_MEAS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SENSOR_ID_PK ON SENSOR
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX VALIDATION_LOGS_ID_PK ON VALIDATION_LOGS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SENSOR_LOCATION_ID_PK ON SENSOR_LOCATION
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX SPECTRUM_EMITTING_ID_FK ON SPECTRUM
(EMITTING_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SENSOR_POLIG_ID_PK ON SENSOR_POLIG
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RES_STLEVEL_CAR_ID_PK ON RES_STLEVEL_CAR
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MEAS_FREQ_PARAM_ID_PK ON MEAS_FREQ_PARAM
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MEAS_SUB_TASK_STA_ID_PK ON SUBTASK_SENSOR
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LINK_SENSORS_WITH_SYNCHRO_P_PK ON LINK_SENSORS_WITH_SYNCHRO_PROC
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX PROTOCOLS_PK ON PROTOCOLS
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX EMITTING_RES_MEAS_ID_FK ON EMITTING
(RES_MEAS_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RES_MEAS_STATION_ID_PK ON RES_MEAS_STATION
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX REFERENCE_LEVELS_ID_PK ON REFERENCE_LEVELS
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX RES_LOC_SEN_MEAS_RESMEASID_PK ON RES_LOCATION_SENSOR_MEAS
(RES_MEAS_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RES_SYS_INFO_BLOCKS_ID_PK ON RES_SYS_INFO_BLOCKS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX LINK_PROTOCOLS_WITH_EMITTIN_PK ON LINK_PROTOCOLS_WITH_EMITTINGS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SENSOR_ANTENNA_ID_PK ON SENSOR_ANTENNA
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX ANTENNA_PATTERN_ID_PK ON ANTENNA_PATTERN
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RES_ROUTES_ID_PK ON RES_ROUTES
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX RES_SYS_INFO_GENERAL_ID_PK ON RES_SYS_INFO
(RES_STGENERAL_ID)
LOGGING
NOPARALLEL;


CREATE INDEX REF_SITUATION_TASK_ID_PK ON REFERENCE_SITUATION
(MEAS_TASK_ID)
LOGGING
NOPARALLEL;


CREATE INDEX SENSOR_POLIG_SENSORID_PK ON SENSOR_POLIG
(SENSOR_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MEAS_DT_PARAM_ID_PK ON MEAS_DT_PARAM
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX UNIQ_NAME_TECHID ON SENSOR
(NAME, TECHID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX AREA_LOCATION_PK ON AREA_LOCATION
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX RES_ST_LEV_CAR_MEASSTATID_PK ON RES_STLEVEL_CAR
(RES_MEAS_STATION_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RES_LEVELS_ID_PK ON RES_LEVELS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RES_SYS_INFO_ID_PK ON RES_SYS_INFO
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MEAS_TASK_ID_PK ON MEAS_TASK
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX AMQP_MESSAGES_ID_PK ON AMQP_MESSAGES
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX RES_SYS_INFO_BLOCKS_INFOID_PK ON RES_SYS_INFO_BLOCKS
(RES_SYS_INFO_ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX MEAS_OTHER_ID_PK ON MEAS_OTHER
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX RES_MEAS_ID_PK ON RES_MEAS
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX HEAD_REF_SPECTRUM_PK ON HEAD_REF_SPECTRUM
(ID)
LOGGING
NOPARALLEL;


CREATE UNIQUE INDEX SYNCHRO_PROCESS_PK ON SYNCHRO_PROCESS
(ID)
LOGGING
NOPARALLEL;


CREATE INDEX REF_LEVELS_RES_MEAS_ID_PK ON REFERENCE_LEVELS
(RES_MEAS_ID)
LOGGING
NOPARALLEL;


CREATE OR REPLACE PROCEDURE      CHECKACTIVITY as
begin
update ICSC.sensor A set A.status = 'F' WHERE  (TO_CHAR(SYSDATE - A.lastactivity)*24*60)>5;
end;
/

SHOW ERRORS;


CREATE OR REPLACE FUNCTION      GetID (inttable_name IN varchar2)
return number
is
n number(15);


BEGIN


if inttable_name ='AMQP_EVENTS' then
select ICSC.AMQP_EVENTS_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='AMQP_MESSAGES' then
select ICSC.AMQP_MESSAGES_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='ANTENNA_PATTERN' then
select ICSC.ANTENNA_PATTERN_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='ENTITY' then
select ICSC.ENTITY_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='ENTITY_PART' then
select ICSC.ENTITY_PART_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='LINK_MEAS_STATION' then
select ICSC.LINK_MEAS_STATION_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='LINK_RES_SENSOR' then
select ICSC.LINK_RES_SENSOR_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='LINK_SECTOR_FREQ' then
select ICSC.LINK_SECTOR_FREQ_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='LINK_SECTOR_MASK' then
select ICSC.LINK_SECTOR_MASK_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='MEAS_DT_PARAM' then
select ICSC.MEAS_DT_PARAM_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='MEAS_FREQ' then
select ICSC.MEAS_FREQ_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='MEAS_FREQ_PARAM' then
select ICSC.MEAS_FREQ_PARAM_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='MEAS_LOCATION_PARAM' then
select ICSC.MEAS_LOCATION_PARAM_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='MEAS_OTHER' then
select ICSC.MEAS_OTHER_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='SUBTASK' then
select ICSC.SUBTASK_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='SUBTASK_SENSOR' then
select ICSC.SUBTASK_SENSOR_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='MEAS_TASK' then
select ICSC.MEAS_TASK_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='OWNER_DATA' then
select ICSC.OWNER_DATA_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='RES_LEVELS' then
select ICSC.RES_LEVELS_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='RES_LEV_MEAS_ONLINE' then
select ICSC.RES_LEV_MEAS_ONLINE_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='RES_LOCATION_SENSOR_MEAS' then
select ICSC.RES_LOCATION_SENSOR_MEAS_I_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='RES_MEAS_STATION' then
select ICSC.RES_MEAS_STATION_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='RES_MEAS' then
select ICSC.RES_MEAS_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='RES_STGENERAL' then
select ICSC.RES_STGENERAL_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='RES_STLEVEL_CAR' then
select ICSC.RES_STLEVEL_CAR_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='RES_STMASKELM' then
select ICSC.RES_STMASKELM_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='RES_SYS_INFO' then
select ICSC.RES_SYS_INFO_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='RES_SYS_INFO_BLOCKS' then
select ICSC.RES_SYS_INFO_BLOCKS_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='RES_ROUTES' then
select ICSC.RES_ROUTES_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='SECTOR' then
select ICSC.SECTOR_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='SECTOR_FREQ' then
select ICSC.SECTOR_FREQ_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='SECTOR_MASK_ELEM' then
select ICSC.SECTOR_MASK_ELEM_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='SENSOR' then
select ICSC.SENSOR_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='SENSOR_ANTENNA' then
select ICSC.SENSOR_ANTENNA_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='SENSOR_EQUIP' then
select ICSC.SENSOR_EQUIP_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='SENSOR_EQUIP_SENSITIVITES' then
select ICSC.SENSOR_EQUIP_SENSITIVITES__SEQ.nextval
into n
from dual;
end if;

if inttable_name ='SENSOR_LOCATION' then
select ICSC.SENSOR_LOCATION_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='SENSOR_POLIG' then
select ICSC.SENSOR_POLIG_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='STATION' then
select ICSC.STATION_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='STATION_SITE' then
select ICSC.STATION_SITE_ID_SEQ.nextval
into n
from dual;
end if;



if inttable_name ='VALIDATION_LOGS' then
select ICSC.VALIDATION_LOGS_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='BEARING' then
select ICSC.BEARING_ID_SEQ.nextval
into n
from dual;
end if;



if inttable_name ='EMITTING' then
select ICSC.EMITTING_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='REFERENCE_LEVELS' then
select ICSC.REFERENCE_LEVELS_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='REFERENCE_SIGNAL' then
select ICSC.REFERENCE_SIGNAL_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='SPECTRUM' then
select ICSC.SPECTRUM_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='WORK_TIME' then
select ICSC.WORK_TIME_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='REFERENCE_SITUATION' then
select ICSC.REFERENCE_SITUATION_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='MEAS_TASK_SIGNAL' then
select ICSC.MEAS_TASK_SIGNAL_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='FREQ_SAMPLE' then
select ICSC.FREQ_SAMPLE_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='SIGN_SYSINFO' then
select ICSC.SIGN_SYSINFO_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='SIGN_SYSINFO_WTIMES' then
select ICSC.SIGN_SYSINFO_WTIMES_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='LINK_AGGREGATION_SENSOR' then
select ICSC.LINK_AGGREGATION_SENSOR_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='LINK_SUBTASK_SENSOR_MASTER' then
select ICSC.LINK_SUBTASK_MASTER_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='ONLINE_MEAS' then
select ICSC.ONLINE_MEAS_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='RES_MEAS_SIGNALING' then
select ICSC.RES_MEAS_SIGNALING_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='LINK_ONLINE_MEAS' then
select ICSC.LINK_ONLINE_MEAS_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='AREA' then
select ICSC.AREA_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='AREA_LOCATION' then
select ICSC.AREA_LOCATION_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='HEAD_REF_SPECTRUM' then
select ICSC.HEAD_REF_SPECTRUM_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='LINK_AREA' then
select ICSC.LINK_AREA_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='LINK_HEAD_REF_SPECTRUM' then
select ICSC.LINK_HEAD_REF_SPECTRUM_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='LINK_PROTOCOLS_WITH_EMITTINGS' then
select ICSC.LINK_PROTOCOLS_WITH_EMITTINGS_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='LINK_SENSORS_WITH_SYNCHRO_PROC' then
select ICSC.LINK_SENSORS_WITH_SYNCHRO_PROC_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='PROTOCOLS' then
select ICSC.PROTOCOLS_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='REF_SPECTRUM' then
select ICSC.REF_SPECTRUM_ID_SEQ.nextval
into n
from dual;
end if;


if inttable_name ='STATION_EXTENDED' then
select ICSC.STATION_EXTENDED_ID_SEQ.nextval
into n
from dual;
end if;

if inttable_name ='SYNCHRO_PROCESS' then
select ICSC.SYNCHRO_PROCESS_ID_SEQ.nextval
into n
from dual;
end if;

return(n);
end;
/

SHOW ERRORS;


CREATE OR REPLACE VIEW XV_UNIT
AS 
SELECT   DISTINCT Tcaz_1.LON AS LON,
                     Tcaz_1.LAT AS LAT,
                     Tcaz_1.LEVEL_DBM AS LEVELDBM,
                     Tcaz_4.CENTRAL_FREQUENCY AS CENTRALFREQUENCY,
                     Tcaz_1.TIME_OF_MEASUREMENTS AS TIMEOFMEASUREMENTS,
                     Tcaz_4.BW AS BW,
                     Tcaz_2.CLIENT_SECTOR_CODE AS IDSTATION,
                     Tcaz_4.SPECRUM_STEPS AS SPECRUMSTEPS,
                     Tcaz_4.T1 AS T1,
                     Tcaz_4.T2 AS T2,
                     Tcaz_3.ID AS ID,
                     Tcaz_2.MEAS_GLOBAL_SID AS MEASGLOBALSID
     FROM            ICSC.RES_STLEVEL_CAR Tcaz_1
                  INNER JOIN
                     ICSC.RES_MEAS_STATION Tcaz_2
                  ON Tcaz_1.RES_MEAS_STATION_ID = Tcaz_2.ID
               INNER JOIN
                  ICSC.RES_MEAS Tcaz_3
               ON Tcaz_2.RES_MEAS_ID = Tcaz_3.ID
            INNER JOIN
               ICSC.RES_STGENERAL Tcaz_4
            ON Tcaz_4.RES_MEAS_STATION_ID = Tcaz_2.ID;


ALTER TABLE LINK_ONLINE_MEAS ADD (
  CONSTRAINT LINK_ONLINE_MEAS_PK
 PRIMARY KEY
 (ID));

ALTER TABLE RES_MEAS_SIGNALING ADD (
  CONSTRAINT RES_MEAS_SIGNALING_PK
 PRIMARY KEY
 (ID));

ALTER TABLE LINK_SUBTASK_SENSOR_MASTER ADD (
  CONSTRAINT LINK_SUBTASK_SENSOR_MASTER_PK
 PRIMARY KEY
 (ID));

ALTER TABLE RES_STMASKELM ADD (
  CONSTRAINT RESSTMASKELM_PK
 PRIMARY KEY
 (ID));

ALTER TABLE MEAS_LOCATION_PARAM ADD (
  CONSTRAINT MEASLOCPARAM_PK
 PRIMARY KEY
 (ID));

ALTER TABLE ENTITY_PART ADD (
  CONSTRAINT ENTITYPART_PK
 PRIMARY KEY
 (ENTITY_ID, PART_INDEX));

ALTER TABLE STATION ADD (
  CONSTRAINT STATION_PK
 PRIMARY KEY
 (ID));

ALTER TABLE OWNER_DATA ADD (
  CONSTRAINT OWNERDATA_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SECTOR_FREQ ADD (
  CONSTRAINT SECTORFREQ_PK
 PRIMARY KEY
 (ID));

ALTER TABLE LINK_MEAS_STATION ADD (
  CONSTRAINT LINKMEASSTATION_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SECTOR_MASK_ELEM ADD (
  CONSTRAINT SECTORMASKELEM_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SECTOR ADD (
  CONSTRAINT SECTOR_PK
 PRIMARY KEY
 (ID));

ALTER TABLE LINK_SECTOR_MASK ADD (
  CONSTRAINT LINKSECTORMASK_PK
 PRIMARY KEY
 (ID));

ALTER TABLE LINK_SECTOR_FREQ ADD (
  CONSTRAINT LINKSECTORFREQ_PK
 PRIMARY KEY
 (ID));

ALTER TABLE STATION_SITE ADD (
  CONSTRAINT STATIONSITE_PK
 PRIMARY KEY
 (ID));

ALTER TABLE ENTITY ADD (
  CONSTRAINT ENTITY_PK
 PRIMARY KEY
 (ID));

ALTER TABLE FREQ_SAMPLE ADD (
  CONSTRAINT FREQ_SAMPLE_PK
 PRIMARY KEY
 (ID));

ALTER TABLE BEARING ADD (
  CONSTRAINT BEARING_PK
 PRIMARY KEY
 (ID));

ALTER TABLE RES_LEV_MEAS_ONLINE ADD (
  CONSTRAINT RESLEVMEASONLINE_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SIGN_SYSINFO ADD (
  CONSTRAINT SIGN_SYSINFOS_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SIGN_SYSINFO_WTIMES ADD (
  CONSTRAINT SIGN_SYSINFO_WTIMES_PK
 PRIMARY KEY
 (ID));

ALTER TABLE RES_LOCATION_SENSOR_MEAS ADD (
  CONSTRAINT RESLOCSENSORMEAS_PK
 PRIMARY KEY
 (ID));

ALTER TABLE VALIDATION_LOGS ADD (
  CONSTRAINT PK_VALIDATION_LOGS
 PRIMARY KEY
 (ID));

ALTER TABLE AMQP_MESSAGES ADD (
  CONSTRAINT AMQP_MESSAGES_ID_PK
 PRIMARY KEY
 (ID));

ALTER TABLE LINK_RES_SENSOR ADD (
  CONSTRAINT LINKRESSENSOR_PK
 PRIMARY KEY
 (ID));

ALTER TABLE LINK_AGGREGATION_SENSOR ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE MEAS_OTHER ADD (
  CONSTRAINT MEASOTHER_PK
 PRIMARY KEY
 (ID));

ALTER TABLE WORK_TIME ADD (
  CONSTRAINT WORKTIME_PK
 PRIMARY KEY
 (ID));

ALTER TABLE RES_SYS_INFO_BLOCKS ADD (
  CONSTRAINT RESSYSINFOBLOCKS_PK
 PRIMARY KEY
 (ID));

ALTER TABLE REFERENCE_SITUATION ADD (
  CONSTRAINT REFSITUATION_PK
 PRIMARY KEY
 (ID));

ALTER TABLE MEAS_DT_PARAM ADD (
  CONSTRAINT MEASDTPARAM_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SYNCHRO_PROCESS ADD (
  CONSTRAINT SYNCHRO_PROCESS_PK
 PRIMARY KEY
 (ID));

ALTER TABLE LINK_HEAD_REF_SPECTRUM ADD (
  CONSTRAINT LINK_HEAD_REF_SPECTRUM_PK
 PRIMARY KEY
 (ID));

ALTER TABLE RES_MEAS_STATION ADD (
  CONSTRAINT RESMEASSTATION_PK
 PRIMARY KEY
 (ID));

ALTER TABLE RES_MEAS ADD (
  CONSTRAINT RESSTATIONMEAS_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SENSOR ADD (
  CONSTRAINT SENSOR_PK
 PRIMARY KEY
 (ID));

ALTER TABLE RES_STLEVEL_CAR ADD (
  CONSTRAINT RESSTLEVELCAR_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SENSOR_POLIG ADD (
  CONSTRAINT SENSORPOLIG_PK
 PRIMARY KEY
 (ID));

ALTER TABLE ONLINE_MEAS ADD (
  CONSTRAINT ONLINE_MEAS_PK
 PRIMARY KEY
 (ID));

ALTER TABLE RES_ROUTES ADD (
  CONSTRAINT RESROUTES_PK
 PRIMARY KEY
 (ID));

ALTER TABLE HEAD_REF_SPECTRUM ADD (
  CONSTRAINT HEAD_REF_SPECTRUM_PK
 PRIMARY KEY
 (ID));

ALTER TABLE STATION_EXTENDED ADD (
  CONSTRAINT STATION_EXTENDED_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SENSOR_LOCATION ADD (
  CONSTRAINT SENSORLOCATION_PK
 PRIMARY KEY
 (ID));

ALTER TABLE RES_LEVELS ADD (
  CONSTRAINT ID_RESLEVELS_PK
 PRIMARY KEY
 (ID));

ALTER TABLE RES_STGENERAL ADD (
  CONSTRAINT RESSTGENERAL_PK
 PRIMARY KEY
 (ID));

ALTER TABLE RES_SYS_INFO ADD (
  CONSTRAINT RESSYSINFO_PK
 PRIMARY KEY
 (ID));

ALTER TABLE AREA ADD (
  CONSTRAINT AREA_PK
 PRIMARY KEY
 (ID));

ALTER TABLE LINK_PROTOCOLS_WITH_EMITTINGS ADD (
  CONSTRAINT LINK_PROTOCOLS_WITH_EMITTIN_PK
 PRIMARY KEY
 (ID));

ALTER TABLE MEAS_FREQ ADD (
  CONSTRAINT MEASFREQ_PK
 PRIMARY KEY
 (ID));

ALTER TABLE PROTOCOLS ADD (
  CONSTRAINT PROTOCOLS_PK
 PRIMARY KEY
 (ID));

ALTER TABLE EMITTING ADD (
  CONSTRAINT EMITTING_PK
 PRIMARY KEY
 (ID));

ALTER TABLE MEAS_FREQ_PARAM ADD (
  CONSTRAINT MEASFREQPARAM_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SUBTASK ADD (
  CONSTRAINT MEASSUBTASK_PK
 PRIMARY KEY
 (ID));

ALTER TABLE AMQP_EVENTS ADD (
  CONSTRAINT AMQP_EVENTS_PK
 PRIMARY KEY
 (ID));

ALTER TABLE REFERENCE_LEVELS ADD (
  CONSTRAINT REFLEVELS_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SENSOR_EQUIP_SENSITIVITES ADD (
  CONSTRAINT SENSOREQUIPSENS_PK
 PRIMARY KEY
 (ID));

ALTER TABLE LINK_AREA ADD (
  CONSTRAINT LINK_AREA_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SUBTASK_SENSOR ADD (
  CONSTRAINT MEASSUBTASKSTA_PK
 PRIMARY KEY
 (ID));

ALTER TABLE MEAS_TASK ADD (
  CONSTRAINT MEASTASK_PK
 PRIMARY KEY
 (ID));

ALTER TABLE REF_SPECTRUM ADD (
  CONSTRAINT REF_SPECTRUM_PK
 PRIMARY KEY
 (ID));

ALTER TABLE ANTENNA_PATTERN ADD (
  CONSTRAINT ANTENNAPATTERN_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SPECTRUM ADD (
  CONSTRAINT SPECTRUM_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SENSOR_EQUIP ADD (
  CONSTRAINT SENSOREQUIP_PK
 PRIMARY KEY
 (ID));

ALTER TABLE LINK_SENSORS_WITH_SYNCHRO_PROC ADD (
  CONSTRAINT LINK_SENSORS_WITH_SYNCHRO_P_PK
 PRIMARY KEY
 (ID));

ALTER TABLE REFERENCE_SIGNAL ADD (
  CONSTRAINT REFSIGNAL_PK
 PRIMARY KEY
 (ID));

ALTER TABLE SENSOR_ANTENNA ADD (
  CONSTRAINT SENSORANTENNA_PK
 PRIMARY KEY
 (ID));

ALTER TABLE MEAS_TASK_SIGNAL ADD (
  CONSTRAINT MEASTASKSIGNAL_PK
 PRIMARY KEY
 (ID));

ALTER TABLE AREA_LOCATION ADD (
  CONSTRAINT AREA_LOCATION_PK
 PRIMARY KEY
 (ID));

