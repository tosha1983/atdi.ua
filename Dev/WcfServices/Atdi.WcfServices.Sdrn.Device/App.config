<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="atdi.platform" type="Atdi.Platform.ConfigElements.AtdiPlatformConfigElement, Atdi.Platform.Configurator" allowLocation="true" allowDefinition="Everywhere"/>
  </configSections>

  <atdi.platform>

    <appServer instance="SdrnDeviceAppServer">

      <components>

        <component type="SdrnDeviceServerAppUnit" assembly="Atdi.AppUnits.Sdrn.DeviceServer">
          <parameters>
            <!-- Описание конечных точек, протоклово и их биндинга -->
            <parameter name="IMeasTasksBus" value="{binding=basicHttpBinding, address=http://localhost:8735/Atdi/WcfServices/Sdrn/Device/MeasTasksBus/};  {binding=netTcpBinding, address=net.tcp://localhost:8734/Atdi/WcfServices/Sdrn/Device/MeasTasksBus/}; {binding=netNamedPipeBinding, address=net.pipe://localhost/Atdi/WcfServices/Sdrn/Device/MeasTasksBus/}"/>

            <!-- Имя файла лицензии-->
            <parameter name="License.FileName" value="" />
            <!-- Зашифрованное значение идентификатора владельца лиензии -->
            <parameter name="License.OwnerId" value="" />
            <!-- Зашифрованное значение ключа продукта -->
            <parameter name="License.ProductKey" value="" />

            <!-- Хост без порта  -->
            <parameter name="RabbitMQ.Host" value=""/>
            <!-- Порт, не обязательно, в этом случаи будет использован по умолчанию  -->
            <parameter name="RabbitMQ.Port" value=""/>
            <!-- Виртуальных хост размещения очередей -->
            <parameter name="RabbitMQ.VirtualHost" value="/"/>
            <!-- Имя пользователя -->
            <parameter name="RabbitMQ.User" value=""/>
            <!-- Зашифрованное значение пароля пользователя -->
            <parameter name="RabbitMQ.Password" value=""/>

            <!-- Версия АПИ  -->
            <parameter name="SDRN.ApiVersion" value="2.0"/>
            <!-- Инстанс сервера SDRN, брать из его файла лицензии  -->
            <parameter name="SDRN.Server.Instance" value=""/>
            <parameter name="SDRN.Server.QueueNamePart" value="Q.SDRN.Server"/>

            <!-- Уникальный идентификатора устройства,в данном случаии сервера устройств выглядит для сервеhа SDRN как единный многофункциональный сенсор  -->
            <parameter name="SDRN.Device.SensorTechId" value=""/>
            <parameter name="SDRN.Device.Exchange" value="EX.SDRN.Device"/>
            <parameter name="SDRN.Device.QueueNamePart" value="Q.SDRN.Device"/>
            <parameter name="SDRN.Device.MessagesBindings" value="{messageType=RegisterSensor, routingKey=#01};{messageType=SendCommandResult, routingKey=#02};{messageType=SendMeasResults, routingKey=#03};{messageType=SendEntity, routingKey=#04};{messageType=SendEntityPart, routingKey=#05};{messageType=UpdateSensor, routingKey=#06}"/>
            <parameter name="SDRN.MessageConvertor.UseEncryption" value="false"/>
            <parameter name="SDRN.MessageConvertor.UseCompression" value="false"/>

            <!-- Тип содержимого исходящих сообщений: Sdrn|Json|Xml|Binary  -->
            <!-- Sdrn - это первый приминяемый ранее формат упаковки содержимого сообщения - по сути JSON в JSON-е, используется по умолчанию, 
                 постепенно отказываемся от его использования по причине двойной паковки/распаковки
                 Предпочтительно использовать Binary -->
            <parameter name="DeviceBus.ContentType" value="Binary"/>

            <!-- Тип буферизации исходящих сообщений: None|FileSystem|Database -->
            <!-- Пока реализован FileSystem -->
            <parameter name="DeviceBus.Outbox.UseBuffer" value="FileSystem"/>

            <!-- Путь к каталогу буферизациияисходящих сообщений в случаи использования файловой системы -->
            <parameter name="DeviceBus.Outbox.Buffer.Folder" value="C:\Buffer\192.168.33.110\DataBus.SDRN\5244\SDRNS\Outbox" />

            <!-- Имя конфигурации соединения к серверу БД в случаи использования в качестве буфера БД (временно не поддерживается) -->
            <parameter name="DeviceBus.Outbox.Buffer.ConnectionStringConfig" value="" />

            <!-- Тип содержимого сообщения в буфере исходящих сообщений:  Json|Xml|Binary  -->
            <!-- В этом формате будет упаковано сообщение для сохранения на диске или в БД в случаи буферизации, предпочтительно Binary -->
            <parameter name="DeviceBus.Outbox.Buffer.ContentType" value="Binary"/>

            <!-- Тип буферизации входящих сообщений: None|FileSystem|Database -->
            <!-- Пока реализован FileSystem -->
            <parameter name="DeviceBus.Inbox.UseBuffer" value="FileSystem"/>

            <!-- Путь к каталогу буферизациия входящих сообщений в случаи использования файловой системы -->
            <parameter name="DeviceBus.Inbox.Buffer.Folder" value="C:\Buffer\192.168.33.110\DataBus.SDRN\5244\SDRNS\Outbox" />

            <!-- Имя конфигурации соединения к серверу БД в случаи использования в качестве буфера БД (временно не поддерживается) -->
            <parameter name="DeviceBus.Inbox.Buffer.ConnectionStringConfig" value="" />

            <!-- Тип содержимого сообщения в буфере входящих сообщений:  Json|Xml|Binary  -->
            <!-- В этом формате будет упаковано сообщение для сохранения на диске или в БД в случаи буферизации, предпочтительно Binary -->
            <parameter name="DeviceBus.Inbox.Buffer.ContentType" value="Binary"/>

            <!-- Открытый ключ шифрования, должен быть одинаков для все участников обмена -->
            <!-- Пока реализован FileSystem -->
            <parameter name="DeviceBus.SharedSecretKey" value="SHDLLKDJKWXXKSDLCJKIWHJKH"/>

            <!-- Таймаут в секундах выделяемый для регистрации адаптера, в случаи его превышения контроллер считает что алаптер не присоединен и н еможет быть использован -->
            <parameter name="SDRN.DeviceServer.AdapterRegistrationTimeoutSec" value="300"/>
          </parameters>
        </component>

      </components>
    </appServer>

  </atdi.platform>

</configuration>